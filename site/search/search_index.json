{"config":{"lang":["de","en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Betaflight / Deutsch # Dies hier ist eine Sammlung an Dokumenten die im Laufe meiner kurzen FPV-Fliegerei entstanden sind und auch weiter entstehen. Hintergrund f\u00fcr diese Ansammlung der Dokumente ist, dass ich mehr Verst\u00e4ndnis f\u00fcr mich selbst schaffen m\u00f6chte und dadurch ein besseres Verst\u00e4ndnis \u00fcber die Zusammenh\u00e4nge und dem Flugverhalten von FPV-Coptern zu erhalten. Weiterhin m\u00f6chte ich kein endloses Wiki in deutsch erstellen sondern einzelne Themenbereiche herausl\u00f6sen - auch wenn es dadurch Redundanzen gibt. F\u00fcr mich hat es den Vorteil, dass ich bestimmte Dokumente ausdrucken kann und mit zum Fliegen nehmen kann, wenn ich einen Copter optimieren m\u00f6chte. Tja und zum Schlu\u00df - ich kann mir einfach nicht alles im Kopf behalten, daher lese ich gerne nach und dann helfen mir kleinere Dokumente mehr als gro\u00dfe. Die einzelnen Seiten stehen auch zum Download als PDF zur Verf\u00fcgung. Alternative: Downloaded dieses Repository komplett und startet \u00fcber Euren Browser index.html Vielleicht hilft es dem ein oder Anderen Du kannst alle Seiten als PDF downloaden \u00fcber ..... Viel Spass und propwash freies Fliegen LunaX - August 2020 Handhabung dieses Github-Repositories # Dies Repository basiert auf MKDocs . Alle geschriebenen Seiten wurden als einfache Markdown-Dateien erstellt. mkdocs.yml (Konfigurationsdatei f\u00fcr MKDocs) docs/ xxxx.md Dateien (einzelne Markdown-Dateien zu den Themen) sites/ pdf/combined.pdf (hier liegt die Gesamt-PDF-Datei) <folder> (diverse Subfolder, enthalten HTML-Seiten zum Offline-Lesen) Betaflight / Deutsch Handhabung dieses Github-Repositories","title":"Home"},{"location":"#betaflight-deutsch","text":"Dies hier ist eine Sammlung an Dokumenten die im Laufe meiner kurzen FPV-Fliegerei entstanden sind und auch weiter entstehen. Hintergrund f\u00fcr diese Ansammlung der Dokumente ist, dass ich mehr Verst\u00e4ndnis f\u00fcr mich selbst schaffen m\u00f6chte und dadurch ein besseres Verst\u00e4ndnis \u00fcber die Zusammenh\u00e4nge und dem Flugverhalten von FPV-Coptern zu erhalten. Weiterhin m\u00f6chte ich kein endloses Wiki in deutsch erstellen sondern einzelne Themenbereiche herausl\u00f6sen - auch wenn es dadurch Redundanzen gibt. F\u00fcr mich hat es den Vorteil, dass ich bestimmte Dokumente ausdrucken kann und mit zum Fliegen nehmen kann, wenn ich einen Copter optimieren m\u00f6chte. Tja und zum Schlu\u00df - ich kann mir einfach nicht alles im Kopf behalten, daher lese ich gerne nach und dann helfen mir kleinere Dokumente mehr als gro\u00dfe. Die einzelnen Seiten stehen auch zum Download als PDF zur Verf\u00fcgung. Alternative: Downloaded dieses Repository komplett und startet \u00fcber Euren Browser index.html Vielleicht hilft es dem ein oder Anderen Du kannst alle Seiten als PDF downloaden \u00fcber ..... Viel Spass und propwash freies Fliegen LunaX - August 2020","title":"Betaflight / Deutsch"},{"location":"#handhabung-dieses-github-repositories","text":"Dies Repository basiert auf MKDocs . Alle geschriebenen Seiten wurden als einfache Markdown-Dateien erstellt. mkdocs.yml (Konfigurationsdatei f\u00fcr MKDocs) docs/ xxxx.md Dateien (einzelne Markdown-Dateien zu den Themen) sites/ pdf/combined.pdf (hier liegt die Gesamt-PDF-Datei) <folder> (diverse Subfolder, enthalten HTML-Seiten zum Offline-Lesen) Betaflight / Deutsch Handhabung dieses Github-Repositories","title":"Handhabung dieses Github-Repositories"},{"location":"about/","text":"LunaX # (c) August 2020, Ritterhude","title":"About"},{"location":"about/#lunax","text":"(c) August 2020, Ritterhude","title":"LunaX"},{"location":"bf_bb_analyse/","text":"BF Blackbox-Analysen # Inhaltsverzeichnis # BF Blackbox-Analysen Inhaltsverzeichnis Allgemeines {{TOC}} Allgemeines #","title":"Blackbox-Analyse"},{"location":"bf_bb_analyse/#bf-blackbox-analysen","text":"","title":"BF Blackbox-Analysen"},{"location":"bf_bb_analyse/#inhaltsverzeichnis","text":"BF Blackbox-Analysen Inhaltsverzeichnis Allgemeines {{TOC}}","title":"Inhaltsverzeichnis"},{"location":"bf_bb_analyse/#allgemeines","text":"","title":"Allgemeines"},{"location":"bf_dmin/","text":"DMin - Handling # Inhaltsverzeichnis # DMin - Handling Inhaltsverzeichnis Allgemeines Setup f\u00fcr den Erstflug Pr\u00fcfen des D Wertes im Flug Parameter {{TOC}} Allgemeines # Mit DMin ist es nun m\u00f6glich unterschiedliche Werte f\u00fcr D zu haben, je nachdem was der Copter gerade macht. Im Normalflug erlaubt uns DMin mit reduzierten D-Werten zu fliegen und der DMax-Wert wird f\u00fcr schnelle Bewegungen genutzt (z.B. bei Fast-Roles, Flips, Propwash) Au\u00dferdem bleiben die Motoren k\u00fchler Wenn DMin im Konfigurator aktiviert wird, wird D in DMax umbenannt und es gibt eine neue Spalte DMin DMin ist vom Profil abh\u00e4ngig (genau wie der D-Wert) d_min_boost_gain steuert die Empfindlichkeit des Boost-Effekts (also wenn von DMin der DMax Wert verwendet werden soll, gibt der Booster an wie schnell das gehen soll. Was bringen geringere D-Werte Vorteil weniger Vibrationen, k\u00fchlere Motoren Besseres Verhalten der Motoren bei Vollgas D-Wert bezogenes Oszillieren wird verringert Nachteil mehr Propwash Gr\u00f6\u00dferes \u00dcberschie\u00dfen und Bounce-Backs P Oszillation bei schnellen Mann\u00f6vern Langsame und Lowlevel Oszillationen bei smoothen Fl\u00fcgen Setup f\u00fcr den Erstflug # Default f\u00fcr DMin R23, P25, Y0 Beachte wenn DMin aktiviert ist, wird der regul\u00e4re DMax Wert nur dann genutzt, wenn schnelle Mann\u00f6ver (z.B. Flips/Rolls) geflogen werden, in langsameren Fl\u00fcgen wird DMIN verwendet Pr\u00fcfen des D Wertes im Flug # Anzeige im OSD, set debug_mode=D_MIN und im OSD die Anzeige debug2 on-screen . Die Anzeige zeigt dir den 10fachen Wert. Beispiel: Anzeige 350 = 35D \u00dcber die Log-Aufzeichnung. Auch hier set debug_mode=D_MIN DEBUG2 im Blackboxexplorer zeigt dir unittelbar D f\u00fcr die ROLL-Achse, DEBUG3 f\u00fcr PITCH. DEBUG2 und DEBUG3 zeigen den D-Wert vor TPA . DEBUG0 zeigt die Gyro-Anteil Hinweis Bei Verwendung von DMin erh\u00f6ht sich die CPU-Last ein wenig. Implementiert ist ein Biquad-Filter und ein PT1-Filter. Parameter # Parameter BF Default Bezeichnung d_min 0/xx 0 = disabled DMin, Werte > 0 entsprechend dem DMin-Wert. Wenn DMin deaktiviert ist, ist aktuell immer der DMax (D) der genutzte Wert f\u00fcr D d_min_advanced 20 beschleunigt des boost-effekt, wenn sich \u00c4nderungen am setpoint ergeben (oder Gyro-Ver\u00e4nderungen). Wird unmittelbar bei Ver\u00e4nderungen durchgef\u00fchrt bevor der Copter \u00fcberhaupt die Bewegung ausf\u00fchrt. Der Wert kann zum Overshot beitragen, 0 deaktiviert diese Funktion und sollte bei Racern verwendet werden (und bei den meisten Coptern). d_min_boost_gain Verst\u00e4rkungsfaktor, wie schnell bei schnellen Bewegungen D angepasst werden soll. 30-35 ist f\u00fcr normale Copter gut geeignet, 40-45 f\u00fcr wirklich sauber gebaute Freestyler. Wenn Propwash das Hauptproblem sind und die Motoren k\u00fchl sind, dann DMax erh\u00f6hen und den gain-Faktor ebenfalls (moderat!) Fine-Tuning des DMin Wertes geht nur \u00fcber eine Blackboxauswertung. F\u00fcr diese Anlayse sollte der Debug-Mode D-MIN ausgew\u00e4hlt werden. Nur dann sieht man die aktuellen D_Min Werte im Flug","title":"DMin"},{"location":"bf_dmin/#dmin-handling","text":"","title":"DMin - Handling"},{"location":"bf_dmin/#inhaltsverzeichnis","text":"DMin - Handling Inhaltsverzeichnis Allgemeines Setup f\u00fcr den Erstflug Pr\u00fcfen des D Wertes im Flug Parameter {{TOC}}","title":"Inhaltsverzeichnis"},{"location":"bf_dmin/#allgemeines","text":"Mit DMin ist es nun m\u00f6glich unterschiedliche Werte f\u00fcr D zu haben, je nachdem was der Copter gerade macht. Im Normalflug erlaubt uns DMin mit reduzierten D-Werten zu fliegen und der DMax-Wert wird f\u00fcr schnelle Bewegungen genutzt (z.B. bei Fast-Roles, Flips, Propwash) Au\u00dferdem bleiben die Motoren k\u00fchler Wenn DMin im Konfigurator aktiviert wird, wird D in DMax umbenannt und es gibt eine neue Spalte DMin DMin ist vom Profil abh\u00e4ngig (genau wie der D-Wert) d_min_boost_gain steuert die Empfindlichkeit des Boost-Effekts (also wenn von DMin der DMax Wert verwendet werden soll, gibt der Booster an wie schnell das gehen soll. Was bringen geringere D-Werte Vorteil weniger Vibrationen, k\u00fchlere Motoren Besseres Verhalten der Motoren bei Vollgas D-Wert bezogenes Oszillieren wird verringert Nachteil mehr Propwash Gr\u00f6\u00dferes \u00dcberschie\u00dfen und Bounce-Backs P Oszillation bei schnellen Mann\u00f6vern Langsame und Lowlevel Oszillationen bei smoothen Fl\u00fcgen","title":"Allgemeines"},{"location":"bf_dmin/#setup-fur-den-erstflug","text":"Default f\u00fcr DMin R23, P25, Y0 Beachte wenn DMin aktiviert ist, wird der regul\u00e4re DMax Wert nur dann genutzt, wenn schnelle Mann\u00f6ver (z.B. Flips/Rolls) geflogen werden, in langsameren Fl\u00fcgen wird DMIN verwendet","title":"Setup f\u00fcr den Erstflug"},{"location":"bf_dmin/#prufen-des-d-wertes-im-flug","text":"Anzeige im OSD, set debug_mode=D_MIN und im OSD die Anzeige debug2 on-screen . Die Anzeige zeigt dir den 10fachen Wert. Beispiel: Anzeige 350 = 35D \u00dcber die Log-Aufzeichnung. Auch hier set debug_mode=D_MIN DEBUG2 im Blackboxexplorer zeigt dir unittelbar D f\u00fcr die ROLL-Achse, DEBUG3 f\u00fcr PITCH. DEBUG2 und DEBUG3 zeigen den D-Wert vor TPA . DEBUG0 zeigt die Gyro-Anteil Hinweis Bei Verwendung von DMin erh\u00f6ht sich die CPU-Last ein wenig. Implementiert ist ein Biquad-Filter und ein PT1-Filter.","title":"Pr\u00fcfen des D Wertes im Flug"},{"location":"bf_dmin/#parameter","text":"Parameter BF Default Bezeichnung d_min 0/xx 0 = disabled DMin, Werte > 0 entsprechend dem DMin-Wert. Wenn DMin deaktiviert ist, ist aktuell immer der DMax (D) der genutzte Wert f\u00fcr D d_min_advanced 20 beschleunigt des boost-effekt, wenn sich \u00c4nderungen am setpoint ergeben (oder Gyro-Ver\u00e4nderungen). Wird unmittelbar bei Ver\u00e4nderungen durchgef\u00fchrt bevor der Copter \u00fcberhaupt die Bewegung ausf\u00fchrt. Der Wert kann zum Overshot beitragen, 0 deaktiviert diese Funktion und sollte bei Racern verwendet werden (und bei den meisten Coptern). d_min_boost_gain Verst\u00e4rkungsfaktor, wie schnell bei schnellen Bewegungen D angepasst werden soll. 30-35 ist f\u00fcr normale Copter gut geeignet, 40-45 f\u00fcr wirklich sauber gebaute Freestyler. Wenn Propwash das Hauptproblem sind und die Motoren k\u00fchl sind, dann DMax erh\u00f6hen und den gain-Faktor ebenfalls (moderat!) Fine-Tuning des DMin Wertes geht nur \u00fcber eine Blackboxauswertung. F\u00fcr diese Anlayse sollte der Debug-Mode D-MIN ausgew\u00e4hlt werden. Nur dann sieht man die aktuellen D_Min Werte im Flug","title":"Parameter"},{"location":"bf_filter/","text":"FILTER Ein mal Eins # Inhaltsverzeichnis # FILTER Ein mal Eins Inhaltsverzeichnis Historie Allgemeines Typische Frequenzen Noise / Vibrationen Oszillation Harmonics Gyro-Data-Filtering Grundlage Filter-Arten Lowpass-Filter Notch-Filter Static-Filter Dynamic-Filter Betaflight-Filter RPM-Filter BF - Dynamic-Lowpassfilter BF - Static Notchfilter BF - Dynamic-Notchfilter BF - Static-Lowpassfilter PT1 BIQUAD BF - Gyro-RPM-Filter BF - Gyro-LowPass Filter BF - DTerm LowPass Filter {{TOC}} Historie # Version Datum Inhalt 0.1 August 2020 initial Allgemeines # Typische Frequenzen # Vibrationen die am Copter auftreten lassen sich in verschiede Frequenzbereiche unterteilen 0 ~ 20Hz: normaler Frequenzbereich w\u00e4hrend des Fliegens (keine Filterung der Signale) 20 ~ 80Hz: Vibrationen niedriger Frequenz (h\u00e4ufig Propwash) 80 ~ 1000Hz: hochfrequente Vibrationen (Noise) verursacht durch Motorvibrationen & Prop-Resonanzen. Hier sieht man auch das typische Bild des Motor-Vibrations-Bandes Harmonics Frame-Resonanzen ... Noise / Vibrationen # Ist eine Bezeichnung f\u00fcr Rauschen bzw. Gyro-Signale die nicht zu den gew\u00fcnschten/ben\u00f6tigten Signalen sind, die durch den FC verarbeitet werden m\u00fcssen. Also Messwerte die irregul\u00e4re sind und die Performance des Copters negativ beeinflussen. Noise (Rauschen) kann ausgel\u00f6st werden durch: * \u00e4u\u00dfere Einfl\u00fcsse (z.B. Wind, Kontakte mit \u00c4sten, ...) * Vibrationen am Chassis (z.B. lose schrauben, d\u00fcnne schwingende Arme, ...) * Vibrationen durch Motoren(z.B. Lagersch\u00e4den, Unwucht, ...) * Vibrationen durch Props (z.B. Unwucht, Prop-Wash, ...) * Kombinationen aus allem \u2022. Noise wird durch den Gyro und anschlie\u00dfend durch den PID- Controller verarbeitet und kann zu fehlerhaften Verhalten f\u00fchren. Eingesetzte Filter LPF 4 , NOTCH 3 , RPM 1 , DTerm 5 versuchen dieses Rauschen zu eliminieren. Eine Deiner Hauptaufgabe beim Tunen Deines Copters ist, dass du diese Vibrationen in den Griff bekommst ohne deutliche Delay zu bekommen. Hinweis: Der DTerm-Anteil des PID-Controllers verst\u00e4rkt Vibrationen deutlich. Daher ist eine Abstimmung der Filter mit dem DTerm gut abzustimmen. Um Vibrationen zu analysieren musst du eine Blackbox-Analyse durchf\u00fchren oder Tools wie Blackbox-Explorer , PIDToolbox oder Plasmatree verwenden. Um einen ersten Eindruck von Vibrationen zu erhalten empfehle ich eine Spektral-Analyse . Hier sieht man sehr deutlich in welchem Frequenzband Vibrationen an Deinem Copter auftreten. Filter helfen, diese Vibrationen m\u00f6glichst aus den Signalen f\u00fcr den Flight-Controller herauszufiltern um anschlie\u00dfend den Motoren m\u00f6glichst saubere Signale zu \u00fcbermitteln. Tip Bevor du damit startetest die PID-Werte anzupassen, stelle Deine Filter optimal auf Deinen Copter ein. Erst dann f\u00e4ngst du mit den PID-Werten an. Versuche durch Deine Filter ein maximales Gyro & DTerm Delay von <5ms zu erreichen. Du kannst das sehr einfach mit PIDToolbox erkennen. Oszillation # Eine Oszillation ist eine Schwingung. In Bezug auf den PID-Controller ist es ein \u00dcber- und Unterschwingen zur Ideallinie. SetPoint = SOLL-Wert = gestrichelte Linie (das ist das RC-Kommando z.B. 700deg/sec)\u2028 Orangene-Linie ein Versuch sich m\u00f6glichst schnell an den Soll-Wert heranzutasten. Man \u00fcberschie\u00dft den Soll-Wert korrigiert und f\u00e4llt unter den Soll-Wert, korrigiert dann wieder \u00fcberschie\u00dft man usw. bis man irgendwann den Sollwert Erreicht. Ideal ist es, wenn man die gr\u00fcne Linie ) m\u00f6glichst schnell ohne bzw. geringer Oszillation den Sollwert erreicht Blauer Bereich Schafft es der PID-Controller \u00fcberhaupt nicht den Soll-Wert zu erreichen dann bewegt man sich in diesem Bereich. Schnelles Oszillieren wird als Vibration empfunden. Nachfolgend ein Bild aus dem Blackbox-Explorer bei dem man sehr deutlich diese Oszillation sehen kann Im nachfolgenden Bild sieht man im oberen Graphen die Oszillation auf der Roll-Achse und welche Auswirkungen diese auf die Motoren haben. Dies l\u00e4\u00dft sich nur bedingt durch Filter berreinigen, sondern \u00fcber die PID-Einstellungen. Nachfolgende Bildfolge zeigt die obigen beschriebenen Vibrationen der Motoren bei einem Punch. Analyse \u00fcber PIDToolbox[^PDT] Roll Info Snap-Roll, deutlich sieht man die Oszillation beim Erreichen des Setpoints. Interessant sind auch die Ausschl\u00e4ge kurz vor der Snap-Roll. Diese Ausschl\u00e4ge sind vermutlich durch Vibrationen der Motoren indiziert Dieses Bild zeigt Motor1 beim Punch kurz vor der Snap-Roll, man sieht das Vibrationen den PTerm und DTerm beeinflussen, was in Schwankungen der Motordrehzahl zeigt. Dadurch entstehen auch Vibrationen. Harmonics # Harmonics oder Harmonische sind wiederkehrende Amplituden (Vibrationen) in den gleichen Frequenzabst\u00e4nden. Das nachfolgende Bild zeigt deutlich drei sich im gleichen Abstand wiederholende Frequenz-Peaks von Vibrationen (Motor Vibrationen) Beginnend mit dem Motor-Noise-Peak bei 158hz, dann die erste Harmonische Amplitude bei 316hz (2x158hz) und die dritte Amplitude bei 474hz (3x158). Gyro-Data-Filtering # Signal & Prozessflu\u00df zur Filterung graph LR classDef dbg fill:#ddd classDef LP fill:#f96 LS[Loop-Start<br>d/t]:::LP --> GY(Gyro) GY -.-> DBG1[[DebugMode<br>Gyro_Raw<br>Notch<br>FFT]]:::dbg GY --> DNF DBG1 -.-> DNF(Dynamic Notch Filter) DNF -.-> DBGFFT[[DebugMode<br>FFT]]:::dbg DNF --> SNF(Static Notch Filter) DBGFFT -.-> SNF graph LR classDef dbg fill:#ddd SNF(Static Notch Filter) --> GLPF SNF -.-> DBGGY[[DebugMode<br>Gyro]]:::dbg DBGGY -.-> GLPF(Gyro LPF<br>LowPass Filter) GLPF --> PID(PID Loop) graph LR classDef dbg fill:#ddd PID(PID Loop) -.-> DBGDF[[DebugMode<br>DFilter]]:::dbg PID --> DTLPF(DTerm<br>LPF) DBGDF -.-> DTLPF DTLPF --> DTNF(DTerm<br>Notch Filter) graph LR classDef dbg fill:#ddd classDef LP fill:#f96 DTNF(DTerm<br>Notch Filter) --> M(Motoren) M --> LE[Loop-End]:::LP Grundlage Filter-Arten # Lowpass-Filter # Niedrige Frequenzen werden durch den Filter durchgelassen, hohe Frequenzen werden ged\u00e4mpft. Hohe Frequenzen sind in der Regel im System nur Rauschen bzw. Vibrationen und werden f\u00fcr die Flugdaten nicht ben\u00f6tigt, daher versucht man sie herauszufiltern. Mit dem LPF 4 wird eine Grenzfrequenz ( cutoff ) angelegt und der FC reduziert die Signale die oberhalb dieser Grenzfrequenz liegen. Die D\u00e4mpfungskurve ist eine Steigung. d.h. je h\u00f6her die Signalfrequenz desto st\u00e4rker die D\u00e4mpfung F\u00fcr den Einsatzbereich des Quadcopters ist der Frequenzbereich von 0-80Hz relevant, alles dar\u00fcber sollte m\u00f6glichst effizient weg gefiltert werden. Beachten Ein fundamentaler Aspekt ist, je niedriger der Schwellwert( cutoff ) f\u00fcr den Lowpass Filter ist - umso mehr muss gefiltert werden. Das wirkt sich auf dem Gesamtperformance aus. Daher gibt es mehrere andere Filter die andere Algorithmen verwenden und das System effizienter gestalten. Notch-Filter # Notch-Filter 3 eigenen sich hervorragend zur Unterdr\u00fcckung von Rauschen in einem sehr spezifischen Frequenzband. Notch-Filter sind in der Regel effektiver zur Reduzierung von Motorrauschen als LPF- Filter aber ggf. m\u00fcssen manuelle Abstimmungen durchgef\u00fchrt werden um die Bandbreite und die Mittenfrequenz zu bestimmen (Notch=Kerbe) Weiterhin k\u00f6nnen Notch-Filter zur Reduzierung von Propwash genutzt werden. Der Q-Faktor (Quality-Factor) gibt die G\u00fcte des Notch-Filters an und beschreibt die Weite des Filters. Je gr\u00f6\u00dfer der Q-Faktor, desto schmaler der Notch-Filter. Beispiel: Es wird festgestellt das wir ein Vibrationsspitze bei ca 260Hz haben (z.B. hervorgerufen durch Propwash), dann kann der Notch-Filter cutoff bei ca. 200Hz beginnen und bei 300Hz enden Static-Filter # Im Rahmen von Betaflight werden statische Filter als LowPass-Filter oder als Notch-Filter genutzt Dynamic-Filter # Dynamic Filter reduzieren ebenfalls Rauschen, wenn die entsprechenden Parameter richtig eingestellt sind. Schwingungen, Motorger\u00e4usche, ... k\u00f6nnen durch die Dynamic-Filter reduziert werden. Ein Dynamic-Filter ist ein Algorithmus, der die Frequenz des Rauschens erkennen kann und er kann den Notch-Filter verwenden, um ihn automatisch zu reduzieren. Nachteil von Dynamic-Filters ist die Erh\u00f6hung der CPU-Last und die Delays. Betaflight-Filter # RPM-Filter # RPM-Filter 1 sind eine besondere Filtertechnik in Betaflight. RPM-Filter basieren auf mehreren Notch-Filter die pr\u00e4zise darauf ausgerichtet sind Motorvibrationen und ihre Harmonics zu filtern und m\u00f6glichst komplett zu elimenieren. F\u00fcr jeden Motore k\u00f6nnen bis zu drei Notch-Filter (max 3 Harmonics) generiert werden (Pro Achse). Das hei\u00dft insgesamt steht eine Bank von 36 Notch-Filtern zur Verf\u00fcgung. 3 Achsen * 3 Harmonics * 4 Motoren = 36 Notch-Filter. Die RPM-Filter basieren auf die Drehzahl der Motoren und dem bidrektionalen DShot-Protokoll in Zusammenspiel mit den Gyrodaten - daher auch Gyro-RPM-Filter BEACHTEN RPM-Filter ben\u00f6tigen f\u00fcr BLHeli32 ESC die aktuellste Firmware >= 32.7 F\u00fcr BLHeli_S ESCs empfehle ich die FW von (auch wenn sie Geld kosten) JFlight 2 BF - Dynamic-Lowpassfilter # Neu ab [BF 4.0] (https://github.com/betaflight/betaflight/wiki/4.0-Tuning-Notes#Dynamic-lowpass-filtering). BF bietet nun die M\u00f6glichkeit, die Grenzfrequenz des LPF 4 bei Vollgas im Vergleich zu 0-Throttle sanft auf einen h\u00f6heren Wert zu verschieben. Die dem ersten Gyro und dem D-Lowpass-Filter zugewiesene Grenzfrequenz steigt nun dynamisch mit zunehmender Drosselung entlang einer Kurve an, die effektiv die Motordrehzahl beeinflusst. Dadurch wird die Verz\u00f6gerung bei Vollgas verringert, und der Dynamische-Notch Filter 3 kann die Motor-Vibrations-Peaks besser verfolgen. BF - Static Notchfilter # Statische Notchfilter werden explizit mit der Center-Frequenz auf auf die Herzzahl der h\u00f6chsten Vibrationen (Peak) gesetzt. In BF kann man zwei dieser Notch-Filter aktivieren. Angegeben werden jeweils die cutoff-Frequenz und die Center-Frequenz. BF - Dynamic-Notchfilter # Ab BF 3.1 kann man auch Dynamic Notch Filter 3 einsetzen. Dieser hocheffiziente Dynamische Notch-Filter setzt sich automatisch auf den Motor-Peak - also den aktuelle h\u00f6chste Frequenz der Motor-Vibrationen, basieren auf die jeweils aktuelle FFT-Analyse. Hierdurch wirkt dieser Notch-Filter in allen Throttle-Stellungen und wandert demnach durch das Frequenzband. Dynamische Notch-Filter haben eine geringere Latzenzzeit als LP-Filter. Notch-Filter sind sehr effektiv und bei einer guten Abstimmung kann man sogar auf LPF-Filter verzichten. Dadurch steigert sich die Gesamtperformance des Copters. LP-Filter aber einfach abschalten sollte wirklich mit bedacht gemacht werden. Der Dyn-Notch-Filter ist per default eingeschaltet. Es gibt zwei Notch-Filter f\u00fcr den GYRO. Einer oder beide k\u00f6nnen bei Bedarf abgestellt werden. Default-Values sind auf 200Hz-400Hz. Diese Grenzfrequenzen arbeiten sehr gut und funktionieren bei den meisten Coptern. F\u00fcr eine Feinabstimmung ist es notwendig eine Blackbox- Auswertung durchzuf\u00fchren (Blackbox-Explorer, PIDToolbox, Plasmatree) BF - Static-Lowpassfilter # In Betaflight wird zwischen zwei Static-LPF Filtern unterschieden PT1 BIQUAD Um einen LPF-Filter zu nutzen muss grunds\u00e4tzlich die untere Grenzfrequenz ( cutoff )) angegeben werden. Der Filter beginnt dann ab dieser Frequenz zu arbeiten. Die Cutoff-Frequenz sollte nicht unter 80Hz liegen, da hier die normalen Flugfrequenzen liegen. PT1 # Dieser Filter hat eine etwas sanftere Kurve und ist ein LPF-Filter 1. Ordnung und hat dadurch eine geringere Latzenzzeit. Der Nachteil dieses Filters, er filtert nicht so stark Vibrationen aus dem Signal (bedingt durch seine Kurvenauspr\u00e4gung) TIP verwende f\u00fcr den ersten LPF-Filter die Einstellung PT1 , denn er ist der schnellere Filter. BIQUAD # Dieser Filter hat eine deutliche steilere Kurve und filtert besser als ein PT1. Er ist ein Filter 2. Ordnung. Dadurch ist die Latzenzzeit schlechter, das Filterergebniss besser. BF - Gyro-RPM-Filter # Ein m\u00e4chtiges neues Feature, das mit BF 4.0 eingef\u00fchrt wurde und in den nachfolgenden Releasen weiter verbessert wurde. Die RPM Filter wurden weiter oben schon beschrieben, nachfolgend eine Reihe von Detailinformationen. BF - Gyro-LowPass Filter # BF - DTerm LowPass Filter # Der DTerm verst\u00e4rkt alles - auch Vibrationssignale - somit k\u00f6nnen ungefilterte DTerm Werte die direkt zu den Motoren gesendet werden dazu f\u00fchren, dass die Motoren hei\u00df werden oder sogar \u00fcberhitzen und zerst\u00f6rt werden. Hier kommen jetzt die DTerm-Lowpass Filter -> Einstellung wie bei den Static-Lowpassfilter Allgemeinen ist ein Biquad-Filter das sinnvolle Minimum an Filterung mit einer Frequenz um 100 Hz bis hinunter zu 80 Hz, wenn man hei\u00dfe Motoren hat. Beachten: Den DTERM-LPF solltet ihr grunds\u00e4tzlich nicht entfernen in Eurer Konfiguration! BF-RPMFilter \u21a9 \u21a9 https://jflight.net/index.php \u21a9 Notch-Filter = Kerb-Filter \u21a9 \u21a9 \u21a9 \u21a9 Lowpass-Filter (Tiefpassfilter) \u21a9 \u21a9 \u21a9 Filter auf den DTerm-Wert \u21a9","title":"Filter"},{"location":"bf_filter/#filter-ein-mal-eins","text":"","title":"FILTER Ein mal Eins"},{"location":"bf_filter/#inhaltsverzeichnis","text":"FILTER Ein mal Eins Inhaltsverzeichnis Historie Allgemeines Typische Frequenzen Noise / Vibrationen Oszillation Harmonics Gyro-Data-Filtering Grundlage Filter-Arten Lowpass-Filter Notch-Filter Static-Filter Dynamic-Filter Betaflight-Filter RPM-Filter BF - Dynamic-Lowpassfilter BF - Static Notchfilter BF - Dynamic-Notchfilter BF - Static-Lowpassfilter PT1 BIQUAD BF - Gyro-RPM-Filter BF - Gyro-LowPass Filter BF - DTerm LowPass Filter {{TOC}}","title":"Inhaltsverzeichnis"},{"location":"bf_filter/#historie","text":"Version Datum Inhalt 0.1 August 2020 initial","title":"Historie"},{"location":"bf_filter/#allgemeines","text":"","title":"Allgemeines"},{"location":"bf_filter/#typische-frequenzen","text":"Vibrationen die am Copter auftreten lassen sich in verschiede Frequenzbereiche unterteilen 0 ~ 20Hz: normaler Frequenzbereich w\u00e4hrend des Fliegens (keine Filterung der Signale) 20 ~ 80Hz: Vibrationen niedriger Frequenz (h\u00e4ufig Propwash) 80 ~ 1000Hz: hochfrequente Vibrationen (Noise) verursacht durch Motorvibrationen & Prop-Resonanzen. Hier sieht man auch das typische Bild des Motor-Vibrations-Bandes Harmonics Frame-Resonanzen ...","title":"Typische Frequenzen"},{"location":"bf_filter/#noise-vibrationen","text":"Ist eine Bezeichnung f\u00fcr Rauschen bzw. Gyro-Signale die nicht zu den gew\u00fcnschten/ben\u00f6tigten Signalen sind, die durch den FC verarbeitet werden m\u00fcssen. Also Messwerte die irregul\u00e4re sind und die Performance des Copters negativ beeinflussen. Noise (Rauschen) kann ausgel\u00f6st werden durch: * \u00e4u\u00dfere Einfl\u00fcsse (z.B. Wind, Kontakte mit \u00c4sten, ...) * Vibrationen am Chassis (z.B. lose schrauben, d\u00fcnne schwingende Arme, ...) * Vibrationen durch Motoren(z.B. Lagersch\u00e4den, Unwucht, ...) * Vibrationen durch Props (z.B. Unwucht, Prop-Wash, ...) * Kombinationen aus allem \u2022. Noise wird durch den Gyro und anschlie\u00dfend durch den PID- Controller verarbeitet und kann zu fehlerhaften Verhalten f\u00fchren. Eingesetzte Filter LPF 4 , NOTCH 3 , RPM 1 , DTerm 5 versuchen dieses Rauschen zu eliminieren. Eine Deiner Hauptaufgabe beim Tunen Deines Copters ist, dass du diese Vibrationen in den Griff bekommst ohne deutliche Delay zu bekommen. Hinweis: Der DTerm-Anteil des PID-Controllers verst\u00e4rkt Vibrationen deutlich. Daher ist eine Abstimmung der Filter mit dem DTerm gut abzustimmen. Um Vibrationen zu analysieren musst du eine Blackbox-Analyse durchf\u00fchren oder Tools wie Blackbox-Explorer , PIDToolbox oder Plasmatree verwenden. Um einen ersten Eindruck von Vibrationen zu erhalten empfehle ich eine Spektral-Analyse . Hier sieht man sehr deutlich in welchem Frequenzband Vibrationen an Deinem Copter auftreten. Filter helfen, diese Vibrationen m\u00f6glichst aus den Signalen f\u00fcr den Flight-Controller herauszufiltern um anschlie\u00dfend den Motoren m\u00f6glichst saubere Signale zu \u00fcbermitteln. Tip Bevor du damit startetest die PID-Werte anzupassen, stelle Deine Filter optimal auf Deinen Copter ein. Erst dann f\u00e4ngst du mit den PID-Werten an. Versuche durch Deine Filter ein maximales Gyro & DTerm Delay von <5ms zu erreichen. Du kannst das sehr einfach mit PIDToolbox erkennen.","title":"Noise / Vibrationen"},{"location":"bf_filter/#oszillation","text":"Eine Oszillation ist eine Schwingung. In Bezug auf den PID-Controller ist es ein \u00dcber- und Unterschwingen zur Ideallinie. SetPoint = SOLL-Wert = gestrichelte Linie (das ist das RC-Kommando z.B. 700deg/sec)\u2028 Orangene-Linie ein Versuch sich m\u00f6glichst schnell an den Soll-Wert heranzutasten. Man \u00fcberschie\u00dft den Soll-Wert korrigiert und f\u00e4llt unter den Soll-Wert, korrigiert dann wieder \u00fcberschie\u00dft man usw. bis man irgendwann den Sollwert Erreicht. Ideal ist es, wenn man die gr\u00fcne Linie ) m\u00f6glichst schnell ohne bzw. geringer Oszillation den Sollwert erreicht Blauer Bereich Schafft es der PID-Controller \u00fcberhaupt nicht den Soll-Wert zu erreichen dann bewegt man sich in diesem Bereich. Schnelles Oszillieren wird als Vibration empfunden. Nachfolgend ein Bild aus dem Blackbox-Explorer bei dem man sehr deutlich diese Oszillation sehen kann Im nachfolgenden Bild sieht man im oberen Graphen die Oszillation auf der Roll-Achse und welche Auswirkungen diese auf die Motoren haben. Dies l\u00e4\u00dft sich nur bedingt durch Filter berreinigen, sondern \u00fcber die PID-Einstellungen. Nachfolgende Bildfolge zeigt die obigen beschriebenen Vibrationen der Motoren bei einem Punch. Analyse \u00fcber PIDToolbox[^PDT] Roll Info Snap-Roll, deutlich sieht man die Oszillation beim Erreichen des Setpoints. Interessant sind auch die Ausschl\u00e4ge kurz vor der Snap-Roll. Diese Ausschl\u00e4ge sind vermutlich durch Vibrationen der Motoren indiziert Dieses Bild zeigt Motor1 beim Punch kurz vor der Snap-Roll, man sieht das Vibrationen den PTerm und DTerm beeinflussen, was in Schwankungen der Motordrehzahl zeigt. Dadurch entstehen auch Vibrationen.","title":"Oszillation"},{"location":"bf_filter/#harmonics","text":"Harmonics oder Harmonische sind wiederkehrende Amplituden (Vibrationen) in den gleichen Frequenzabst\u00e4nden. Das nachfolgende Bild zeigt deutlich drei sich im gleichen Abstand wiederholende Frequenz-Peaks von Vibrationen (Motor Vibrationen) Beginnend mit dem Motor-Noise-Peak bei 158hz, dann die erste Harmonische Amplitude bei 316hz (2x158hz) und die dritte Amplitude bei 474hz (3x158).","title":"Harmonics"},{"location":"bf_filter/#gyro-data-filtering","text":"Signal & Prozessflu\u00df zur Filterung graph LR classDef dbg fill:#ddd classDef LP fill:#f96 LS[Loop-Start<br>d/t]:::LP --> GY(Gyro) GY -.-> DBG1[[DebugMode<br>Gyro_Raw<br>Notch<br>FFT]]:::dbg GY --> DNF DBG1 -.-> DNF(Dynamic Notch Filter) DNF -.-> DBGFFT[[DebugMode<br>FFT]]:::dbg DNF --> SNF(Static Notch Filter) DBGFFT -.-> SNF graph LR classDef dbg fill:#ddd SNF(Static Notch Filter) --> GLPF SNF -.-> DBGGY[[DebugMode<br>Gyro]]:::dbg DBGGY -.-> GLPF(Gyro LPF<br>LowPass Filter) GLPF --> PID(PID Loop) graph LR classDef dbg fill:#ddd PID(PID Loop) -.-> DBGDF[[DebugMode<br>DFilter]]:::dbg PID --> DTLPF(DTerm<br>LPF) DBGDF -.-> DTLPF DTLPF --> DTNF(DTerm<br>Notch Filter) graph LR classDef dbg fill:#ddd classDef LP fill:#f96 DTNF(DTerm<br>Notch Filter) --> M(Motoren) M --> LE[Loop-End]:::LP","title":"Gyro-Data-Filtering"},{"location":"bf_filter/#grundlage-filter-arten","text":"","title":"Grundlage Filter-Arten"},{"location":"bf_filter/#lowpass-filter","text":"Niedrige Frequenzen werden durch den Filter durchgelassen, hohe Frequenzen werden ged\u00e4mpft. Hohe Frequenzen sind in der Regel im System nur Rauschen bzw. Vibrationen und werden f\u00fcr die Flugdaten nicht ben\u00f6tigt, daher versucht man sie herauszufiltern. Mit dem LPF 4 wird eine Grenzfrequenz ( cutoff ) angelegt und der FC reduziert die Signale die oberhalb dieser Grenzfrequenz liegen. Die D\u00e4mpfungskurve ist eine Steigung. d.h. je h\u00f6her die Signalfrequenz desto st\u00e4rker die D\u00e4mpfung F\u00fcr den Einsatzbereich des Quadcopters ist der Frequenzbereich von 0-80Hz relevant, alles dar\u00fcber sollte m\u00f6glichst effizient weg gefiltert werden. Beachten Ein fundamentaler Aspekt ist, je niedriger der Schwellwert( cutoff ) f\u00fcr den Lowpass Filter ist - umso mehr muss gefiltert werden. Das wirkt sich auf dem Gesamtperformance aus. Daher gibt es mehrere andere Filter die andere Algorithmen verwenden und das System effizienter gestalten.","title":"Lowpass-Filter"},{"location":"bf_filter/#notch-filter","text":"Notch-Filter 3 eigenen sich hervorragend zur Unterdr\u00fcckung von Rauschen in einem sehr spezifischen Frequenzband. Notch-Filter sind in der Regel effektiver zur Reduzierung von Motorrauschen als LPF- Filter aber ggf. m\u00fcssen manuelle Abstimmungen durchgef\u00fchrt werden um die Bandbreite und die Mittenfrequenz zu bestimmen (Notch=Kerbe) Weiterhin k\u00f6nnen Notch-Filter zur Reduzierung von Propwash genutzt werden. Der Q-Faktor (Quality-Factor) gibt die G\u00fcte des Notch-Filters an und beschreibt die Weite des Filters. Je gr\u00f6\u00dfer der Q-Faktor, desto schmaler der Notch-Filter. Beispiel: Es wird festgestellt das wir ein Vibrationsspitze bei ca 260Hz haben (z.B. hervorgerufen durch Propwash), dann kann der Notch-Filter cutoff bei ca. 200Hz beginnen und bei 300Hz enden","title":"Notch-Filter"},{"location":"bf_filter/#static-filter","text":"Im Rahmen von Betaflight werden statische Filter als LowPass-Filter oder als Notch-Filter genutzt","title":"Static-Filter"},{"location":"bf_filter/#dynamic-filter","text":"Dynamic Filter reduzieren ebenfalls Rauschen, wenn die entsprechenden Parameter richtig eingestellt sind. Schwingungen, Motorger\u00e4usche, ... k\u00f6nnen durch die Dynamic-Filter reduziert werden. Ein Dynamic-Filter ist ein Algorithmus, der die Frequenz des Rauschens erkennen kann und er kann den Notch-Filter verwenden, um ihn automatisch zu reduzieren. Nachteil von Dynamic-Filters ist die Erh\u00f6hung der CPU-Last und die Delays.","title":"Dynamic-Filter"},{"location":"bf_filter/#betaflight-filter","text":"","title":"Betaflight-Filter"},{"location":"bf_filter/#rpm-filter","text":"RPM-Filter 1 sind eine besondere Filtertechnik in Betaflight. RPM-Filter basieren auf mehreren Notch-Filter die pr\u00e4zise darauf ausgerichtet sind Motorvibrationen und ihre Harmonics zu filtern und m\u00f6glichst komplett zu elimenieren. F\u00fcr jeden Motore k\u00f6nnen bis zu drei Notch-Filter (max 3 Harmonics) generiert werden (Pro Achse). Das hei\u00dft insgesamt steht eine Bank von 36 Notch-Filtern zur Verf\u00fcgung. 3 Achsen * 3 Harmonics * 4 Motoren = 36 Notch-Filter. Die RPM-Filter basieren auf die Drehzahl der Motoren und dem bidrektionalen DShot-Protokoll in Zusammenspiel mit den Gyrodaten - daher auch Gyro-RPM-Filter BEACHTEN RPM-Filter ben\u00f6tigen f\u00fcr BLHeli32 ESC die aktuellste Firmware >= 32.7 F\u00fcr BLHeli_S ESCs empfehle ich die FW von (auch wenn sie Geld kosten) JFlight 2","title":"RPM-Filter"},{"location":"bf_filter/#bf-dynamic-lowpassfilter","text":"Neu ab [BF 4.0] (https://github.com/betaflight/betaflight/wiki/4.0-Tuning-Notes#Dynamic-lowpass-filtering). BF bietet nun die M\u00f6glichkeit, die Grenzfrequenz des LPF 4 bei Vollgas im Vergleich zu 0-Throttle sanft auf einen h\u00f6heren Wert zu verschieben. Die dem ersten Gyro und dem D-Lowpass-Filter zugewiesene Grenzfrequenz steigt nun dynamisch mit zunehmender Drosselung entlang einer Kurve an, die effektiv die Motordrehzahl beeinflusst. Dadurch wird die Verz\u00f6gerung bei Vollgas verringert, und der Dynamische-Notch Filter 3 kann die Motor-Vibrations-Peaks besser verfolgen.","title":"BF - Dynamic-Lowpassfilter"},{"location":"bf_filter/#bf-static-notchfilter","text":"Statische Notchfilter werden explizit mit der Center-Frequenz auf auf die Herzzahl der h\u00f6chsten Vibrationen (Peak) gesetzt. In BF kann man zwei dieser Notch-Filter aktivieren. Angegeben werden jeweils die cutoff-Frequenz und die Center-Frequenz.","title":"BF - Static Notchfilter"},{"location":"bf_filter/#bf-dynamic-notchfilter","text":"Ab BF 3.1 kann man auch Dynamic Notch Filter 3 einsetzen. Dieser hocheffiziente Dynamische Notch-Filter setzt sich automatisch auf den Motor-Peak - also den aktuelle h\u00f6chste Frequenz der Motor-Vibrationen, basieren auf die jeweils aktuelle FFT-Analyse. Hierdurch wirkt dieser Notch-Filter in allen Throttle-Stellungen und wandert demnach durch das Frequenzband. Dynamische Notch-Filter haben eine geringere Latzenzzeit als LP-Filter. Notch-Filter sind sehr effektiv und bei einer guten Abstimmung kann man sogar auf LPF-Filter verzichten. Dadurch steigert sich die Gesamtperformance des Copters. LP-Filter aber einfach abschalten sollte wirklich mit bedacht gemacht werden. Der Dyn-Notch-Filter ist per default eingeschaltet. Es gibt zwei Notch-Filter f\u00fcr den GYRO. Einer oder beide k\u00f6nnen bei Bedarf abgestellt werden. Default-Values sind auf 200Hz-400Hz. Diese Grenzfrequenzen arbeiten sehr gut und funktionieren bei den meisten Coptern. F\u00fcr eine Feinabstimmung ist es notwendig eine Blackbox- Auswertung durchzuf\u00fchren (Blackbox-Explorer, PIDToolbox, Plasmatree)","title":"BF - Dynamic-Notchfilter"},{"location":"bf_filter/#bf-static-lowpassfilter","text":"In Betaflight wird zwischen zwei Static-LPF Filtern unterschieden PT1 BIQUAD Um einen LPF-Filter zu nutzen muss grunds\u00e4tzlich die untere Grenzfrequenz ( cutoff )) angegeben werden. Der Filter beginnt dann ab dieser Frequenz zu arbeiten. Die Cutoff-Frequenz sollte nicht unter 80Hz liegen, da hier die normalen Flugfrequenzen liegen.","title":"BF - Static-Lowpassfilter"},{"location":"bf_filter/#pt1","text":"Dieser Filter hat eine etwas sanftere Kurve und ist ein LPF-Filter 1. Ordnung und hat dadurch eine geringere Latzenzzeit. Der Nachteil dieses Filters, er filtert nicht so stark Vibrationen aus dem Signal (bedingt durch seine Kurvenauspr\u00e4gung) TIP verwende f\u00fcr den ersten LPF-Filter die Einstellung PT1 , denn er ist der schnellere Filter.","title":"PT1"},{"location":"bf_filter/#biquad","text":"Dieser Filter hat eine deutliche steilere Kurve und filtert besser als ein PT1. Er ist ein Filter 2. Ordnung. Dadurch ist die Latzenzzeit schlechter, das Filterergebniss besser.","title":"BIQUAD"},{"location":"bf_filter/#bf-gyro-rpm-filter","text":"Ein m\u00e4chtiges neues Feature, das mit BF 4.0 eingef\u00fchrt wurde und in den nachfolgenden Releasen weiter verbessert wurde. Die RPM Filter wurden weiter oben schon beschrieben, nachfolgend eine Reihe von Detailinformationen.","title":"BF - Gyro-RPM-Filter"},{"location":"bf_filter/#bf-gyro-lowpass-filter","text":"","title":"BF - Gyro-LowPass Filter"},{"location":"bf_filter/#bf-dterm-lowpass-filter","text":"Der DTerm verst\u00e4rkt alles - auch Vibrationssignale - somit k\u00f6nnen ungefilterte DTerm Werte die direkt zu den Motoren gesendet werden dazu f\u00fchren, dass die Motoren hei\u00df werden oder sogar \u00fcberhitzen und zerst\u00f6rt werden. Hier kommen jetzt die DTerm-Lowpass Filter -> Einstellung wie bei den Static-Lowpassfilter Allgemeinen ist ein Biquad-Filter das sinnvolle Minimum an Filterung mit einer Frequenz um 100 Hz bis hinunter zu 80 Hz, wenn man hei\u00dfe Motoren hat. Beachten: Den DTERM-LPF solltet ihr grunds\u00e4tzlich nicht entfernen in Eurer Konfiguration! BF-RPMFilter \u21a9 \u21a9 https://jflight.net/index.php \u21a9 Notch-Filter = Kerb-Filter \u21a9 \u21a9 \u21a9 \u21a9 Lowpass-Filter (Tiefpassfilter) \u21a9 \u21a9 \u21a9 Filter auf den DTerm-Wert \u21a9","title":"BF - DTerm LowPass Filter"},{"location":"bf_pid_controller/","text":"PID - Controller # Inhaltsverzeichnis # PID - Controller Inhaltsverzeichnis Historie Allgemeines Soll-Wert IST-Wert PID-Loop P-Term (Proportionaler Fehler) I-Term (Integraler Fehler) D-Term Derivativer-Wert (Vorhersage) Looptime (d/t) {{TOC}} Historie # Version Datum Inhalt 0.1 August 2020 initial Allgemeines # Berechnung des Fehlerwertes zwischen dem SOLL und IST-Wert Der jeweilige Fehlerwert wird mit einer Konstanten (Kp, Ki, Kd) 1 multipliziert. Die Summe aller der Fehler ergibt den Gesamt Fehler PIDError Soll-Wert # In Falle von Coptern ist der Sollwert, der Wert der durch die Gimbals vorgegeben wird (RC-Command). Entspricht also dem Zielwert, den der Copter erreichen soll (z.B. der Copter soll ein Rolle mit 700deg/sec durchf\u00fchren. IST-Wert # Ist der Wert, der durch das Gyro \u00fcber alle drei Achsen gemessen wurde Soll & IST werden in der PID-Loop kontinuierlich gelesen und ausgewertet. Signale werden gegl\u00e4ttet und gefiltert. Das Endresultat entspricht f\u00fcr die aktuelle Zeiteinheit (d/t) den anliegenden PID-Error 2 P proportionaler Anteil I integraler Anteil D derivativer Anteil PID-Loop # Die PID-Loop in Betaflight beinhaltet (f\u00fcr alle Achsen) folgende Punkte (vereinfachte Darstellung und nicht 100% vollst\u00e4ndig). Die PID-Loop beschreibt auch die maximale Looptime graph LR classDef LP fill:#f96 ls[Loop<br>Start d/t]:::LP le[Loop<br>ende]:::LP RC(RC-Cmd) RPM(RPM-Tele) GY(Gyro) GF(Gyro<br>Filter) DT(DTerm<br>Filter) MIX(Mixer) MOT(Motoren<br>1-4) SM(Smooting) PERR((PID<br>Error)) PSUM((PID<br>Sum)) PID(P-I-D<br>Terms) ls--> RPM & RC & GY RC --> SM --> PERR GY --> GF --> DT RPM --> GF GF & DT --> PERR subgraph PIDCTRL [PID-Controller] PERR --> PID --> PSUM end PSUM --> MIX MIX --> MOT MOT --> le P-Term (Proportionaler Fehler) # Der PTerm versucht den proportionalen Fehler m\u00f6glichst schnell auf 0 zu reduzieren. Vereinfacht gesagt: Wie hart der FC daran arbeitet den Fehler zu korrigieren. Je h\u00f6her der PTerm um so sch\u00e4rfer ist die Reaktion. Ein zu hoher PTerm f\u00fchrt aber zu Oszillation und \u00dcberschwingen. Eingabewerte: SOLL ist der RC-Command Wert (Stick) IST ist der GYRO Wert Beispiel: Kp = 0.2 Input = 100 GYRO = 60 Perr = Kp * (60-100) => 8 I-Term (Integraler Fehler) # Ist eine Aufsummierung aller bis dato aufgetretenen Fehler \u00fcber die Zeit (d/t). Mit dem ITerm wird eingestellt wie hart/schnell der FC reagieren soll gegen Umwelteinfl\u00fcsse (z.B. Wind) um eine definierte Lage/H\u00f6he beizubehalten. Somit wird ein stetiger Fehler, der anliegt und durch den P-Wert nicht korrigiert werden konnte, durch den I-Wert kompensiert, um den Gesamtfehler m\u00f6glichst schnell auf 0 zu bringen. ITerm: Driftet der Copter ohne Steuerbefehl, dann den ITerm erh\u00f6hen. Musst man sehr h\u00e4ufig die Flugbahn korrigieren (besonderen bei h\u00f6heren Throttle) dann ist der ITerm zu niedrig Beispiel: Wenn bei schnellen Throttle-Bewegungen der Copter nicht stabil bleibt, ist h\u00e4ufig der ITerm zu niedrig. d/t = Zeiteinheit - im Beispiel gehen wir von 1 aus (einfacher zu rechnen) Im Beispiel gehen wir davon aus, dass IerrSum = -1 ist Ki = 0.02 Input = 100 Gyro = 80 IerrSum = IerrSum + (80-100 Ierr = Ki * IerrSum * d/t Ierr = 0,05 * -21 * d/t Ierr = -1,05 D-Term Derivativer-Wert (Vorhersage) # Der DTerm ist im Prinzip der Gegenpart zum PTerm und versucht eine Vorhersage zu treffen, wie der Fehlerwert in der Zukunft ist und versucht diesem entgegen zu wirken. P & D h\u00e4ngen eng beieinander. Der DTerm ist ein D\u00e4mpfungsglied f\u00fcr ein \u00dcberkorrigieren des P-Reglers und versucht \u201eOvershoots\u201c zu minimieren. \u00c4hnlich einem Schock-Absorber. Den DTerm erh\u00f6hen kann eine Oszillation mehr gl\u00e4tten. Zu hohe DTerm f\u00fchren aber zu hei\u00dfen Motoren und k\u00f6nnen bis zur Zerst\u00f6rung des ESCs oder des Motors f\u00fchren. Extensive D-Werte f\u00fchren auch zu einer Vermindung des Anspruchverhaltens des Copters. Im Beispiel gehen wir davon aus, dass DerrAlt = -4 ist Kd = 0.1 Input = 100 Gyro = 80 DerrTmp = (80-100) - DerrAlt = -16 Derr = Kd * (-16) * d/t Derr = -1.6 Looptime (d/t) # Den Zyklus den der PID-Controller ben\u00f6tigt das Eingangssignal (Eingangswert) und der daraus resultierenden Kalkulation und einen Ausgabewert zu berechnen bezeichnet man als \u201eLoop\u201c. Die dazu ben\u00f6tigte Zeit wird \u201eLooptime\u201c genannt Looptime wird in ms (Millisekunden) berechnet bzw. in Hz 1sek = 1000ms = 1Hz = 1 Zyklus 1ms = 0.001sek = 1KHz 4k Looptime = 4000x die Loop durchlaufen pro Sekunde Daher ist es auch wichtig, dass man in BF die Looptime so einstellt das der FC dies auch verarbeiten kann ohne Fehlberechnungen durchzuf\u00fchren Beispiel FC F405 4KHz = 4000 Loops pro Sekunde - das schafft der FC problemlos 8KHz = 8000 Loops ist f\u00fcr einige F4 FCs zu viel, wenn zus\u00e4tzliche Filter eingeschaltet wurden. Bei F7 FCs ist 8K typisch. Fehlerkonstanten, werden pro Achse in BF eingestellt. \u21a9 PID-Error, Summe aller anliegenden Fehlersignale. [^DT] \u21a9","title":"PID-Controller"},{"location":"bf_pid_controller/#pid-controller","text":"","title":"PID - Controller"},{"location":"bf_pid_controller/#inhaltsverzeichnis","text":"PID - Controller Inhaltsverzeichnis Historie Allgemeines Soll-Wert IST-Wert PID-Loop P-Term (Proportionaler Fehler) I-Term (Integraler Fehler) D-Term Derivativer-Wert (Vorhersage) Looptime (d/t) {{TOC}}","title":"Inhaltsverzeichnis"},{"location":"bf_pid_controller/#historie","text":"Version Datum Inhalt 0.1 August 2020 initial","title":"Historie"},{"location":"bf_pid_controller/#allgemeines","text":"Berechnung des Fehlerwertes zwischen dem SOLL und IST-Wert Der jeweilige Fehlerwert wird mit einer Konstanten (Kp, Ki, Kd) 1 multipliziert. Die Summe aller der Fehler ergibt den Gesamt Fehler PIDError","title":"Allgemeines"},{"location":"bf_pid_controller/#soll-wert","text":"In Falle von Coptern ist der Sollwert, der Wert der durch die Gimbals vorgegeben wird (RC-Command). Entspricht also dem Zielwert, den der Copter erreichen soll (z.B. der Copter soll ein Rolle mit 700deg/sec durchf\u00fchren.","title":"Soll-Wert"},{"location":"bf_pid_controller/#ist-wert","text":"Ist der Wert, der durch das Gyro \u00fcber alle drei Achsen gemessen wurde Soll & IST werden in der PID-Loop kontinuierlich gelesen und ausgewertet. Signale werden gegl\u00e4ttet und gefiltert. Das Endresultat entspricht f\u00fcr die aktuelle Zeiteinheit (d/t) den anliegenden PID-Error 2 P proportionaler Anteil I integraler Anteil D derivativer Anteil","title":"IST-Wert"},{"location":"bf_pid_controller/#pid-loop","text":"Die PID-Loop in Betaflight beinhaltet (f\u00fcr alle Achsen) folgende Punkte (vereinfachte Darstellung und nicht 100% vollst\u00e4ndig). Die PID-Loop beschreibt auch die maximale Looptime graph LR classDef LP fill:#f96 ls[Loop<br>Start d/t]:::LP le[Loop<br>ende]:::LP RC(RC-Cmd) RPM(RPM-Tele) GY(Gyro) GF(Gyro<br>Filter) DT(DTerm<br>Filter) MIX(Mixer) MOT(Motoren<br>1-4) SM(Smooting) PERR((PID<br>Error)) PSUM((PID<br>Sum)) PID(P-I-D<br>Terms) ls--> RPM & RC & GY RC --> SM --> PERR GY --> GF --> DT RPM --> GF GF & DT --> PERR subgraph PIDCTRL [PID-Controller] PERR --> PID --> PSUM end PSUM --> MIX MIX --> MOT MOT --> le","title":"PID-Loop"},{"location":"bf_pid_controller/#p-term-proportionaler-fehler","text":"Der PTerm versucht den proportionalen Fehler m\u00f6glichst schnell auf 0 zu reduzieren. Vereinfacht gesagt: Wie hart der FC daran arbeitet den Fehler zu korrigieren. Je h\u00f6her der PTerm um so sch\u00e4rfer ist die Reaktion. Ein zu hoher PTerm f\u00fchrt aber zu Oszillation und \u00dcberschwingen. Eingabewerte: SOLL ist der RC-Command Wert (Stick) IST ist der GYRO Wert Beispiel: Kp = 0.2 Input = 100 GYRO = 60 Perr = Kp * (60-100) => 8","title":"P-Term (Proportionaler Fehler)"},{"location":"bf_pid_controller/#i-term-integraler-fehler","text":"Ist eine Aufsummierung aller bis dato aufgetretenen Fehler \u00fcber die Zeit (d/t). Mit dem ITerm wird eingestellt wie hart/schnell der FC reagieren soll gegen Umwelteinfl\u00fcsse (z.B. Wind) um eine definierte Lage/H\u00f6he beizubehalten. Somit wird ein stetiger Fehler, der anliegt und durch den P-Wert nicht korrigiert werden konnte, durch den I-Wert kompensiert, um den Gesamtfehler m\u00f6glichst schnell auf 0 zu bringen. ITerm: Driftet der Copter ohne Steuerbefehl, dann den ITerm erh\u00f6hen. Musst man sehr h\u00e4ufig die Flugbahn korrigieren (besonderen bei h\u00f6heren Throttle) dann ist der ITerm zu niedrig Beispiel: Wenn bei schnellen Throttle-Bewegungen der Copter nicht stabil bleibt, ist h\u00e4ufig der ITerm zu niedrig. d/t = Zeiteinheit - im Beispiel gehen wir von 1 aus (einfacher zu rechnen) Im Beispiel gehen wir davon aus, dass IerrSum = -1 ist Ki = 0.02 Input = 100 Gyro = 80 IerrSum = IerrSum + (80-100 Ierr = Ki * IerrSum * d/t Ierr = 0,05 * -21 * d/t Ierr = -1,05","title":"I-Term (Integraler Fehler)"},{"location":"bf_pid_controller/#d-term-derivativer-wert-vorhersage","text":"Der DTerm ist im Prinzip der Gegenpart zum PTerm und versucht eine Vorhersage zu treffen, wie der Fehlerwert in der Zukunft ist und versucht diesem entgegen zu wirken. P & D h\u00e4ngen eng beieinander. Der DTerm ist ein D\u00e4mpfungsglied f\u00fcr ein \u00dcberkorrigieren des P-Reglers und versucht \u201eOvershoots\u201c zu minimieren. \u00c4hnlich einem Schock-Absorber. Den DTerm erh\u00f6hen kann eine Oszillation mehr gl\u00e4tten. Zu hohe DTerm f\u00fchren aber zu hei\u00dfen Motoren und k\u00f6nnen bis zur Zerst\u00f6rung des ESCs oder des Motors f\u00fchren. Extensive D-Werte f\u00fchren auch zu einer Vermindung des Anspruchverhaltens des Copters. Im Beispiel gehen wir davon aus, dass DerrAlt = -4 ist Kd = 0.1 Input = 100 Gyro = 80 DerrTmp = (80-100) - DerrAlt = -16 Derr = Kd * (-16) * d/t Derr = -1.6","title":"D-Term Derivativer-Wert (Vorhersage)"},{"location":"bf_pid_controller/#looptime-dt","text":"Den Zyklus den der PID-Controller ben\u00f6tigt das Eingangssignal (Eingangswert) und der daraus resultierenden Kalkulation und einen Ausgabewert zu berechnen bezeichnet man als \u201eLoop\u201c. Die dazu ben\u00f6tigte Zeit wird \u201eLooptime\u201c genannt Looptime wird in ms (Millisekunden) berechnet bzw. in Hz 1sek = 1000ms = 1Hz = 1 Zyklus 1ms = 0.001sek = 1KHz 4k Looptime = 4000x die Loop durchlaufen pro Sekunde Daher ist es auch wichtig, dass man in BF die Looptime so einstellt das der FC dies auch verarbeiten kann ohne Fehlberechnungen durchzuf\u00fchren Beispiel FC F405 4KHz = 4000 Loops pro Sekunde - das schafft der FC problemlos 8KHz = 8000 Loops ist f\u00fcr einige F4 FCs zu viel, wenn zus\u00e4tzliche Filter eingeschaltet wurden. Bei F7 FCs ist 8K typisch. Fehlerkonstanten, werden pro Achse in BF eingestellt. \u21a9 PID-Error, Summe aller anliegenden Fehlersignale. [^DT] \u21a9","title":"Looptime (d/t)"},{"location":"bf_release_4.0/","text":"BF 4.0 - Neuerungen # Historie # Version Datum Inhalt 0.1 August 2020 initial Allgemeine Anpassungen # Keine Konfigurationen aus \u00e4lteren Releasen importieren Einige Default-Werte haben sich ge\u00e4ndert BF-Configurator 10.5.1 ist notwendig Blackbox-Explroer 3.3.1 BF 4.0 enth\u00e4lt Major # Echtzeit RPM feedback und Notch-Filter basieren auf RPM DTerm Management mit d_min Throttle basierendes dynamic gyro und DTerm Filterung Start Kontrolle (launch control) Umschaltbare OSD-Profile Vereinheitliche Zielsysteme Minor # Kaskadierende dynamische Notch-Filter Schub Linearisierung Integrierte YAW Kontrolle Umschaltbare LED_Strip Profile Gimbal-Overlay im OSD Profil-Switching basierend die Anzahl der Lipo-Zellen Pro Profil Limitierung des maximalen Motor Outputs *","title":"BF 4.0 Release"},{"location":"bf_release_4.0/#bf-40-neuerungen","text":"","title":"BF 4.0 - Neuerungen"},{"location":"bf_release_4.0/#historie","text":"Version Datum Inhalt 0.1 August 2020 initial","title":"Historie"},{"location":"bf_release_4.0/#allgemeine-anpassungen","text":"Keine Konfigurationen aus \u00e4lteren Releasen importieren Einige Default-Werte haben sich ge\u00e4ndert BF-Configurator 10.5.1 ist notwendig Blackbox-Explroer 3.3.1 BF 4.0 enth\u00e4lt","title":"Allgemeine Anpassungen"},{"location":"bf_release_4.0/#major","text":"Echtzeit RPM feedback und Notch-Filter basieren auf RPM DTerm Management mit d_min Throttle basierendes dynamic gyro und DTerm Filterung Start Kontrolle (launch control) Umschaltbare OSD-Profile Vereinheitliche Zielsysteme","title":"Major"},{"location":"bf_release_4.0/#minor","text":"Kaskadierende dynamische Notch-Filter Schub Linearisierung Integrierte YAW Kontrolle Umschaltbare LED_Strip Profile Gimbal-Overlay im OSD Profil-Switching basierend die Anzahl der Lipo-Zellen Pro Profil Limitierung des maximalen Motor Outputs *","title":"Minor"},{"location":"bf_release_4.1/","text":"BF 4.1 - Neuerungen # Historie # Version Datum Inhalt 0.1 August 2020 initial Allgemeine Anpassungen # Keine Konfigurationen aus \u00e4lteren Releasen importieren Einige Default-Werte haben sich ge\u00e4ndert BF-Configurator 10.6.0 ist notwendig Blackbox-Explorer 3.4.0 f\u00fcr BF 4.1 DSHot f\u00fcr bidirektionalen Einsatz mit RPM-Filtern wurde verbessert. BLHeli_32 ab Version 32.7 ist erforderlich VTX-Tabellen sind nun nach einem flashen neu zu laden. Hiermit k\u00f6nnen nun die VTX deutlich besser konfiguriert werden Eine Anpassungen an den OSD-Fonts Major # NEU Feedforward 2.0 \u00dcberarbeitetes bidirektionales DShot Dynamisches Leerlauf-Managment nutzt nun RPM-Telemetrie voll konfigurierbare VTX \u00fcber VTX-Tabellen Minor # Unterst\u00fctzt nun Spektrum SRXL2 Protokoll Board spezifische Defaultwerte Unterst\u00fctzung von willk\u00fcrlichen Gyro & Magnetometer Ausrichtungen","title":"BF 4.1 Release"},{"location":"bf_release_4.1/#bf-41-neuerungen","text":"","title":"BF 4.1 - Neuerungen"},{"location":"bf_release_4.1/#historie","text":"Version Datum Inhalt 0.1 August 2020 initial","title":"Historie"},{"location":"bf_release_4.1/#allgemeine-anpassungen","text":"Keine Konfigurationen aus \u00e4lteren Releasen importieren Einige Default-Werte haben sich ge\u00e4ndert BF-Configurator 10.6.0 ist notwendig Blackbox-Explorer 3.4.0 f\u00fcr BF 4.1 DSHot f\u00fcr bidirektionalen Einsatz mit RPM-Filtern wurde verbessert. BLHeli_32 ab Version 32.7 ist erforderlich VTX-Tabellen sind nun nach einem flashen neu zu laden. Hiermit k\u00f6nnen nun die VTX deutlich besser konfiguriert werden Eine Anpassungen an den OSD-Fonts","title":"Allgemeine Anpassungen"},{"location":"bf_release_4.1/#major","text":"NEU Feedforward 2.0 \u00dcberarbeitetes bidirektionales DShot Dynamisches Leerlauf-Managment nutzt nun RPM-Telemetrie voll konfigurierbare VTX \u00fcber VTX-Tabellen","title":"Major"},{"location":"bf_release_4.1/#minor","text":"Unterst\u00fctzt nun Spektrum SRXL2 Protokoll Board spezifische Defaultwerte Unterst\u00fctzung von willk\u00fcrlichen Gyro & Magnetometer Ausrichtungen","title":"Minor"},{"location":"bf_release_4.2/","text":"BF 4.2 - Neuerungen # Historie # Version Datum Inhalt 0.1 August 2020 initial Allgemeine Anpassungen # BF-Configurator 10.7.0 ist notwendig Blackbox-Explorer 3.5.0 f\u00fcr BF 4.2 Neue Tuning-M\u00f6glichkeiten (Slider) Bei einigen Targets downgeloaded werden m\u00fcssen, daher ist 10.7.0 wichtig. Keine Konfigurationen aus \u00e4lteren Releasen importieren Einige Default-Werte haben sich ge\u00e4ndert Es wird kein Motorprotokoll automatisch ausgew\u00e4hlt. Dies muss nach einem Update manuell durchgef\u00fchrt werden. Wenn bidirektionales DShot ausgew\u00e4hlt wird, die Geschwindigkeit des Protokolls wird halbiert um die Bidrirektionalit\u00e4t aufrecht zu erhalten. Dies gilt nicht f\u00fcr DShot600 . Bei DShot300 muss die PIDLoop auf 4k gesetzt werden. Bei DShot150 auf 2k. Demnach bei DShot600 auf 8k Bevor gearmt werden kann muss der Accelerometer calibriert werden. Die Strommessung ist nun am Throttle-Signal gekoppelt, das erm\u00f6glicht besser Vorhersagen zum Stromverbrauch Major # \u00dcberarbeitung der Gyro-Loop. Diese l\u00e4uft nun in der Geschwindigkeit der nativen Beschwindigkeit des Gyros zwei neue Rates ausw\u00e4hlbar ACTUAL und QUICK VBat Kompensation, wenn die Batteriespannung nachl\u00e4\u00dft Neuer NFE Race Modus Minor # OSD Logo nun auch beim Armen sichtbar Unterst\u00fctzung f\u00fcr verbesserte OSD-/CMS-Ger\u00e4te hinzugef\u00fcgt, wodurch es m\u00f6glich wurde, das Highligting von Text oder Symbolen zu unterst\u00fctzen Unterst\u00fctzung f\u00fcr FrSkyOSD OSD-Ger\u00e4te hinzugef\u00fcgt Unterst\u00fctzung f\u00fcr das Redpine RC-Protokoll auf Ger\u00e4ten mit einem \u00fcber SPI angeschlossenen CC2500-Chip (FrSky SPI) hinzugef\u00fcgt","title":"BF 4.2 Release"},{"location":"bf_release_4.2/#bf-42-neuerungen","text":"","title":"BF 4.2 - Neuerungen"},{"location":"bf_release_4.2/#historie","text":"Version Datum Inhalt 0.1 August 2020 initial","title":"Historie"},{"location":"bf_release_4.2/#allgemeine-anpassungen","text":"BF-Configurator 10.7.0 ist notwendig Blackbox-Explorer 3.5.0 f\u00fcr BF 4.2 Neue Tuning-M\u00f6glichkeiten (Slider) Bei einigen Targets downgeloaded werden m\u00fcssen, daher ist 10.7.0 wichtig. Keine Konfigurationen aus \u00e4lteren Releasen importieren Einige Default-Werte haben sich ge\u00e4ndert Es wird kein Motorprotokoll automatisch ausgew\u00e4hlt. Dies muss nach einem Update manuell durchgef\u00fchrt werden. Wenn bidirektionales DShot ausgew\u00e4hlt wird, die Geschwindigkeit des Protokolls wird halbiert um die Bidrirektionalit\u00e4t aufrecht zu erhalten. Dies gilt nicht f\u00fcr DShot600 . Bei DShot300 muss die PIDLoop auf 4k gesetzt werden. Bei DShot150 auf 2k. Demnach bei DShot600 auf 8k Bevor gearmt werden kann muss der Accelerometer calibriert werden. Die Strommessung ist nun am Throttle-Signal gekoppelt, das erm\u00f6glicht besser Vorhersagen zum Stromverbrauch","title":"Allgemeine Anpassungen"},{"location":"bf_release_4.2/#major","text":"\u00dcberarbeitung der Gyro-Loop. Diese l\u00e4uft nun in der Geschwindigkeit der nativen Beschwindigkeit des Gyros zwei neue Rates ausw\u00e4hlbar ACTUAL und QUICK VBat Kompensation, wenn die Batteriespannung nachl\u00e4\u00dft Neuer NFE Race Modus","title":"Major"},{"location":"bf_release_4.2/#minor","text":"OSD Logo nun auch beim Armen sichtbar Unterst\u00fctzung f\u00fcr verbesserte OSD-/CMS-Ger\u00e4te hinzugef\u00fcgt, wodurch es m\u00f6glich wurde, das Highligting von Text oder Symbolen zu unterst\u00fctzen Unterst\u00fctzung f\u00fcr FrSkyOSD OSD-Ger\u00e4te hinzugef\u00fcgt Unterst\u00fctzung f\u00fcr das Redpine RC-Protokoll auf Ger\u00e4ten mit einem \u00fcber SPI angeschlossenen CC2500-Chip (FrSky SPI) hinzugef\u00fcgt","title":"Minor"},{"location":"bf_tuning/","text":"BF Allgemeine Tuning Tips # Inhaltsverzeichnis # BF Allgemeine Tuning Tips Inhaltsverzeichnis Allgemeines {{TOC}} Allgemeines # Um den Copter zu tunen sollte nachfolgende Reihenfolge versucht werden einzuhalten Sauber bauen . Vermeide schlackernde Kabel. Der FC sollte vibrationsged\u00e4mpft verbaut sein. Pr\u00fcfe ob den Gyro etwas ber\u00fchrt ( strikt vermeiden ). Sind alle Schrauben fest Versuche auf die aktuelleste BF-Version aufzusetzen. Mache vor Deinen \u00c4nderungen ein Backup der aktuellen FW. Sichere Deine Konfiguration mit diff all . Neue BF-Version versprechen Bugfixings und h\u00e4ufig verbesserte Filter/Tunig-M\u00f6glichkeiten. Leider ist der Update immer mit Arbeit verbunden. Sender kalibrieren . Im Receiver-Tab sollten f\u00fcr alle drei Achsen die Einstellungen zwischenn 1000 und 2000 liegen. Hintergrund ist, liegen die aktuellen Werte unter-/oberhalb wird das RC-Signal beschnitten oder gespreizt, beides sorgt daf\u00fcr, dass die Signalverarbeitung nicht optimal ist. Pr\u00fcfe im BF-Configurator die Lage des Copters. Der gr\u00fcne Pfeil symbolisiert Vorne . Neige den Copter nach unten (PITCH-Forward), der der simulierte Copter muss sich ebenfalls nach unten neigen. Wiederholen f\u00fcr alle Achsen. Der simulierte Copter muss exakt das gleiche tun als der echte Copter. Das ist eine sehr, sehr wichtige Funktionspr\u00fcfung, ansonsten wird der Copter beim Erststart vermutlich direkt einen Salto schlagen","title":"Tuning"},{"location":"bf_tuning/#bf-allgemeine-tuning-tips","text":"","title":"BF Allgemeine Tuning Tips"},{"location":"bf_tuning/#inhaltsverzeichnis","text":"BF Allgemeine Tuning Tips Inhaltsverzeichnis Allgemeines {{TOC}}","title":"Inhaltsverzeichnis"},{"location":"bf_tuning/#allgemeines","text":"Um den Copter zu tunen sollte nachfolgende Reihenfolge versucht werden einzuhalten Sauber bauen . Vermeide schlackernde Kabel. Der FC sollte vibrationsged\u00e4mpft verbaut sein. Pr\u00fcfe ob den Gyro etwas ber\u00fchrt ( strikt vermeiden ). Sind alle Schrauben fest Versuche auf die aktuelleste BF-Version aufzusetzen. Mache vor Deinen \u00c4nderungen ein Backup der aktuellen FW. Sichere Deine Konfiguration mit diff all . Neue BF-Version versprechen Bugfixings und h\u00e4ufig verbesserte Filter/Tunig-M\u00f6glichkeiten. Leider ist der Update immer mit Arbeit verbunden. Sender kalibrieren . Im Receiver-Tab sollten f\u00fcr alle drei Achsen die Einstellungen zwischenn 1000 und 2000 liegen. Hintergrund ist, liegen die aktuellen Werte unter-/oberhalb wird das RC-Signal beschnitten oder gespreizt, beides sorgt daf\u00fcr, dass die Signalverarbeitung nicht optimal ist. Pr\u00fcfe im BF-Configurator die Lage des Copters. Der gr\u00fcne Pfeil symbolisiert Vorne . Neige den Copter nach unten (PITCH-Forward), der der simulierte Copter muss sich ebenfalls nach unten neigen. Wiederholen f\u00fcr alle Achsen. Der simulierte Copter muss exakt das gleiche tun als der echte Copter. Das ist eine sehr, sehr wichtige Funktionspr\u00fcfung, ansonsten wird der Copter beim Erststart vermutlich direkt einen Salto schlagen","title":"Allgemeines"},{"location":"bf_tuning_parameters/","text":"Betaflight BF4.x Tuning-Parameters # Inhaltsverzeichnis # Betaflight BF4.x Tuning-Parameters Inhaltsverzeichnis Historie Tuning-Parameter Betaflight - Tuning-Tips DSHOT RPM Telemetrie-Daten Allgemeines IN OUT Parameter Gyro Filter Allgemeines IN OUT Gyro Filterarten Gyro Filter => GYRO-RPM Notch Filter Allgemeines Parameter Gyro Filter => Dynamic-Notch Filter Allgemeines Parameter Gyro Filter => Static Gyro-Notch Filter (1 und 2) Allgemeines Parameter Gyro Filter => Dynamic Gyro LowPass Filter Allgemeines Parameter Gyro Filter => Static Gyro LowPass Filter Allgemeines IN Parameter DTerm Filter Allgemeines IN OUT DTerm => Dynamic D lowpass Allgemein Parameter DTerm => Static D notch AllgemeiHz Parameter Feedforward Allgemeines IN OUT Parameter VBat Allgemeines IN OUT Parameter RC-Command Allgemeines IN OUT Parameter rc_smoothing_auto_smoothness (Default:10) Setpoint Allgemeines IN OUT Parameter ITerm Parameter Allgemeines Historie # Version Datum Inhalt 0.1 August 2020 initial 0.2 August 2020 neu strukturiert Tuning-Parameter # Nachfolgende eine Reihe der wichtigsten Tuning-Variablen. Viel mehr Details findet man hier: BF4.2-Tuning-Notes ACHTUNG Bei einem Update von BF <4.2 bitte KEIN Restore von alten Werten die durch diff all gespeichert wurden, importieren. Fangt bei NULL an Betaflight - Tuning-Tips # Weitere Tuning-Tips findest du im BF-Wiki der jeweiligen Versionen: * BF4.2-Tuning-Notes * BF4.1-Tuning-Notes * BF4.0-Tuning-Notes * BF4.0-Tuning-Notes DSHOT RPM Telemetrie-Daten # Allgemeines # Ab BF 4.0 werden Telemetriedaten des ESCs ausgelesen und analysiert. Diese Informationen sind elementar wichtig f\u00fcr viele nachgelagerte Filtertechniken und f\u00fcr den PID-Controller. Voraussetzung ist, dass man f\u00fcr den ESC ein DSHOT-Protokoll ausgew\u00e4hlt hat IN # ESC - Beachten: die aktuelle Firmware des ESCs muss RPM-Telemetrie-Daten verarbeiten k\u00f6nnen. OUT # RPM-Daten pro Motor Parameter # Diese Parameter k\u00f6nnen nicht direkt beeinflu\u00dft werden. Zu beachten sind welches DSHOT Protokoll verwendet wird. Bedenke: bei DSHOT300 und einer 8k PIDLoop erh\u00e4ltst du nur jede zweite PID-Loop Daten zugesendet. Daraus folgt, du solltest das passende DSHOT-Protokoll auf Deine PID-Loop ausw\u00e4hlen DSHOT150 : empfohlen bei 2k PIDLoop DSHOT300 : empfohlen bei 4k PIDLoop DSHOT600 : empfohlen bei 8k PIDLoop DSHOT1200 : 8k PIDLoop Gyro Filter # Allgemeines # Der Gyro ist das zentrale Bauelement auf dem FC und stellt die aktuellen IST Flugdaten zur Verf\u00fcgung. Diese Daten werden dann bezogen auf die SOLL Daten (Die RC-Commands) verrechnet, gefiltert dem PIDController zur Verf\u00fcgung gestellt. Anschlie\u00dfend gemixt und den Motoren als neue. Jeder GYRO besitzt werkseitig einen internen LowPass-Filter. Je nach Bautyp des Gyros unterscheiden sich wie gut dieser interne Filter tats\u00e4chlich ist. Die Gyro-Filter Parameter umfassen folgende Filterarten Bei den weiteren beschriebenen Gyro Filtern wird nicht nochmals auf \u00ccN/OUT`eingegangen. IN # gyro_scaled Daten direkt aus dem Gyro. OUT # Bereitstellung der Daten f\u00fcr nachgelagerte DTerm-Filter und als Mix-Daten f\u00fcr den P-Controller => Vorab-Fehler P-Berechnung Gyro Filterarten # Es wird unterschieden zwischen den Gyro-RPM Filtern, einem Dynamic NotchFilter und Statich Notichfilter 1+2, einem Dynamsiche LowPassfilter und einem statischen Lowpassfilter. Gyro-RPM-Notch Filter gyro_rpm_notch_harmonics=3 gyro_rpm_notch_q=500 gyro_rpm_notch_min=100 Dynamic-Notch Filter dyn_notch_min_hz dyn_notch_max_hz dyn_notch_width_percent dyn_notch_q Static Gyro-Notch Filter (1 und 2) gyro_notch1_hz gyro_notch1_cutoff gyro_notch2_hz gyro_notch2_cutoff Dynamic Gyro LowPass Filter gyro_lowpass_type gyro_lowpass_hz dyn_lpf_gyro_min_hz dyn_lpf_gyro_max_hz Static Gyro LowPass Filter gyro_lowpass2_type gyro_lowpass2_hz Gyro Filter => GYRO-RPM Notch Filter # Allgemeines # Der Gyro-RPM Notch Filter nutzt die vom ESC zur\u00fcckgegeben RPM-Daten und liegt als erste Filterstufe direkt hinter dem gyro_scaled Daten. BF 4.1/4.2 Bidirectional DSHOT and RPM Filter Guide Parameter # Parameter BF Default Bezeichnung gyro_rpm_notch_harmonics 3 Schwingungen treten in wiederkehrenden Amplituden auf. Eine harmonische Schwingung kann durch eine Sinusfunktion beschrieben werden (https://de.wikipedia.org/wiki/Schwingung#Harmonische_Schwingung). Das bedeutet, dass eine Vibration sich alle xHz wiederholt! Betaflight generiert somit pro Motor 3 (Anzahl Harmonics) Notch-Filter, somit werden alle Motordaten durch 12 individuellen RPM-Notch-Filter analyisiert und schon vorgefiltert. Diesen Sachverhalt kann man in einer Blackboxauswertung sehr gut sehen (FFT-Spektrogram). gyro_rpm_notch_q 500 Der Q-Faktor des Notchfilters gibt die Breite der Kerbe (Notch=Kerbe) an. Je gr\u00f6\u00dfer die Zahl (max 1000) umso schmaler wird der Notchfilter. Der Q-Faktor wird auch als G\u00fcte-Faktur bezeichnet. Je h\u00f6her die G\u00fcte-Faktor ( Q-Faktor ) desto geringer die D\u00e4mpfung, desto schmaler der Notch-Filter. Kleine Q-Faktoren vergr\u00f6\u00dfern den RPM-Filter Delay - was unerw\u00fcnscht ist gyro_rpm_notch_min 100 Beschreibt die untere Grenzfrequenz des Notch-Filters Gyro Filter => Dynamic-Notch Filter # Allgemeines # Dieser Filter ist dem RPM-Filter nachgelagert und filtern nochmals bestimmte Frequenzen aus. Ohne RPM-Filter wird der Filter als Doppel-Notch Filter betrieben, dies wird \u00fcber dyn_notch_width_percent > 0 definiert. Ist dieser Wert 0, wird nur ein Notch-Filter erzeugt. Das besondere an dynamic-notch-Filter ist, dass sie dynamisch sich an der aktuellen RPM des Systems orientieren und so laufend rund um den h\u00f6chsten Frequenzbereich der Motor-Vibrationen arbeiten. Grunds\u00e4tzlich gilt, dynamische Notch-Filter haben eine geringere Latenzzeit als statische Notch-Filter. Bei einem gut abgestimmten Copter k\u00f6nnen andere Low-Pass Filter deaktiviert werden. Parameter # Parameter BF Default Bezeichnung dyn_notch_min_hz Beschreibt die untere Grenzfrequenz dieses Notch-Filters in Hz dyn_notch_max_hz Beschreibt die obere Grenzfrequenz dieses Notch-Filters in Hz dyn_notch_width_percent Beschreibt (wenn > 0), wie weit beide Notch-Filter voneinander getrennt sind. Der Prozentsatz berechnet sich aus der Breite des Notch-Filters. dyn_notch_q Q-Faktor des Notch-Filters. (siehe hierzu Beschreibung weiter oben Gyro Filter => Static Gyro-Notch Filter (1 und 2) # Allgemeines # Zwei statische Notch-Filter f\u00fcr ein bestimmtes Frequenzband. Dieses Frequenzband wird w\u00e4hrend des Fluges nicht mehr angepasst (statisch). Parameter # Parameter BF Default Bezeichnung gyro_notch1_hz Center-Frequenz des Notch-Filters gyro_notch1_cutoff todo gyro_notch2_hz Center-Frequenz des Notch-Filters gyro_notch2_cutoff todo Gyro Filter => Dynamic Gyro LowPass Filter # Allgemeines # Die Auswahl den Dyn-Notchfilters Frequenzbereiches kann \u00fcber drei Auswahlm\u00f6glichkeiten voreingestellt werden * LOW : dyn_lpf_gyro_max_hz liegt bei 334hz oder ist 0 (deaktiviert) * MEDIUM : dyn_lpf_gyro_max_hz liegt bei 610hz * HIGH : dyn_lpf_gyro_max_hz liegt bei > 610hz Die durchschnittlichen Werte f\u00fcr optimale Werte f\u00fcr diese Ranges liegen * LOW : 80-330hz (f\u00fcr Copter mit niedrigen Drehzahlen oder wenn Resonanzen in niedrigen Frequenzen auftreten * MEDIUM : 140-550hz (f\u00fcr gut eingestellte 5\" Copter * HIGH : 230-800hz (f\u00fcr Copter mit hohen Drehzahlen 2,5\" - 3\") Ab BF 4.0 wird zus\u00e4tzlicher dyn_notch_min_hz Parameter zur Verf\u00fcgung gestellt. Dieser Wert f\u00e4ngt den Bereich unterhalb des Dyn-LPF ab und hat seinen Default bei 150Hz. Um 100Hz Peaks heraus zu filtern muss LOW aktiviert werden und der Parameter # Parameter BF Default Bezeichnung dyn_notch_min_hz gyro_lowpass_type LOW/MEDIUM/HIGH (siehe Beschreibung) gyro_lowpass_hz Static Gyro LPF, sind dyn_lpf gesetzt, dann ist der Static LPF deaktiviert dyn_lpf_gyro_min_hz untere Grenzfrequenz es DynLPF dyn_lpf_gyro_max_hz obere Grenzfrequenz des DynLPF Gyro Filter => Static Gyro LowPass Filter # Allgemeines # IN # Throttle-Daten Parameter # Parameter BF Default Bezeichnung gyro_lowpass2_type 4.0 PT1/BIQUAD gyro_lowpass2_hz 4.0 unter Grenzfrequenz des LPF in Hz, wenn auf 0, dann ist der LPF deaktiviert DTerm Filter # Allgemeines # Der DTerm-Filter besitzt eine Reihe von Parametern die dazu genutzt werden, das DTerm-Ausgangssignal zu bearbeiten und von St\u00f6rungen (Vibrations-Frequenzen zu befreien). Wichtig: : Der DTerm des PID-Controllers verst\u00e4rkt Vibrationen, daher ist es wichtig, dass dieses Signal m\u00f6glichst frei von St\u00f6rungs- / Vibrationssignalen ist. D verst\u00e4rkt h\u00f6here Frequenzen, der D-Anteil wird aber dringend ben\u00f6igt um Vibrationen zwischen 30-80hz (Z.B. Propwash) auszugleichen. Das bedeutet wir ben\u00f6tigen soviel wie m\u00f6glich D-Anteil bis 100hz und so wenig wie m\u00f6glich \u00fcber 100hz. DTerm-Filter sollten immer in der ersten Stufe als BIQUAD und in der zweiten Stufe als PT eingestellt werden. DTerm Filter Daten sind zeitabh\u00e4ngig ( d/dt ) Folgende DTerm-Filter werden genutzt: * Dynamic D lowpass ``` dterm_lowpass_type dyn_lpf_dterm_min_hz dyn_lpf_dterm_max_hz dyn_lpf_dterm_curve_expo ``` Static D lowpass dterm_lowpass2_type dterm_lowpass2_hz Static D notch dterm_notch_hz dterm_notch_cutoff IN # Daten kommen aus den Gyro Filter Berechnungen OUT # Daten gehen direkt an den D-Controller DTerm => Dynamic D lowpass # Allgemein # Dynamischer Lowpass filter f\u00fcr den DTerm Parameter # Parameter BF Default Bezeichnung dterm_lowpass_type 4.0 PT1 / BIQUAD, sollte auf BIQUAD f\u00fcr LPF 1 stehen, LPF2 = PT1 dyn_lpf_dterm_min_hz 4.0 LowPass min Hz dterm_lowpass2_hz 4.0 LowPass2 min Hz DTerm => Static D notch # AllgemeiHz # Parameter # Parameter BF Default Bezeichnung dterm_notch_hz dterm_notch_cutoff Feedforward # Allgemeines # Feedforward ist dem PID-Controller nachgelagert und unabh\u00e4ngig vom PID. FF verst\u00e4rkt bzw. wirkt auf Deine Stickbewegung und hilft den Motoren schneller zu reagieren. Mehr Infos zu Feedforward Feedforward BF 4.1 Feedforward 2.0 BF 4.2 IN # OUT # Parameter # Parameter BF Default Bezeichnung ff_boost 4.1 15 Der Booster verst\u00e4rkt den gesamten FF-Wert aber zu einem sehr fr\u00fchen Zeitpunkt und veringert damit ein Delay ff_interpolate_sp 4.1 2 (Average_2) siehe Anhang der Tabelle ff_spike_limit 4.1 50 Es wird eine effiziente verz\u00f6gerungsfreie D\u00e4mpfungsmethode verwendet, die Erh\u00f6hung des boosts durch Spikes verringert bzw. vermeidet. Liegt der normale Boost-Wert unter dem limit wird er durchgelassen, alles weitere, hohe Boosts die durch Spikes verursacht werden, werden ged\u00e4mpft. ff_max_rate_limit 4.1 100 ff_max_rate_limit unterbricht den Feedforward, wenn die Geschwindigkeit mit dem der Stick bewegt wird wahrscheinlich sein Ende des mechanischen Verfahrensweges erreicht. Dadurch wird ein \u00dcberschwingen gerade bei Beginn von Flips reduziert. ff_smooth_factor 4.2 37 Gl\u00e4ttungsfaktor f\u00fcr einkommende Signale. Funktioniert wie ein LowPassfilter. 0 = keine Gl\u00e4ttung, h\u00f6here Werte wie der Defaultwert, erh\u00f6hen auch die Latzenzeit und wirkt dem eigentlich FF-Forward entgegen ff_interpolate_sp Auspr\u00e4gung * OFF * ON * AVERAGE-2 : passt f\u00fcr die meisten Copter & Freestyler * AVERAGE-3 : * AVERAGE-4 : VBat # Allgemeines # Ab BF 4.2 wir mit VBAT-SAG-Kompensation Weitere Informationen: IN # OUT # Parameter # Parameter BF Default Bezeichnung vbat_sag_compensation 4.2 100 100% Kompensation der Batterieentladung vbat_pid_gain ? OFF alte Version sollte immer OFF sein RC-Command # Allgemeines # IN # Receiver-Daten Signal OUT # Daten werden mit den eingstellten Rates verrechnet und gelten dann als das angewendete RCCommand-Eingangs-Signal Parameter # Parameter BF Default Bezeichnung rc_interpolation rc_interp rc_inter_ch rc_inter_int rc_smoothing_auto_smoothness (Default:10) # rc-smoothing-auto-smoothness setzt wie glatt der die RC-Signale sein sollen. Gr\u00f6\u00dfere Werte erh\u00f6hen die Gl\u00e4ttung vergr\u00f6\u00dfern aber das RC-Delay. 10 ist optimal f\u00fcr die meisten allgemeinen Fl\u00fcge. Racer bevorzugen 8 oder sogar 5. Das RC-Delay nimmt zwar ab, daf\u00fcr k\u00f6nnen die Motor-Signale etwas unruhiger werden. Setpoint # Allgemeines # In der weiteren Berarbietung der Eingangssignale werden diese als Setpoint bezeichnet und spiegeln das RC-Signal wieder allerdings durch eine Reihe von Parametern gegl\u00e4ttet IN # Aufbereitetes RC-Command Signal OUT # Daten die mittels setpoint_smoothing nochmals gegl\u00e4ttet werden werden an * Vorab-Fehler P-Berechnung * d/dt Parameter # Setpoint/Setpoint smoothing beinhaltet eine Reihe von Parametern die das eigentlich Signal nochmals aufbereiten. Parameter BF Default Bezeichnung rc_smoothing_type rc_smoothing_auto_smoothness 10 setzt wie glatt der die RC-Signale sein sollen. Gr\u00f6\u00dfere Werte erh\u00f6hen die Gl\u00e4ttung vergr\u00f6\u00dfern aber das RC-Delay. 10 ist optimal f\u00fcr die meisten allgemeinen Fl\u00fcge. Racer bevorzugen 8 oder sogar 5. Das RC-Delay nimmt zwar ab, daf\u00fcr k\u00f6nnen die Motor-Signale etwas unruhiger werden rc_smoothing_input_Hz rc_smoothing_input_type ITerm Parameter # Allgemeines # ITerm Parameter dienen dazu das I-Signal die PID-Controllers entweder vor der Bearbeitung von ITerm oder nach ITerm zu beeinflu\u00dfen. Insbesondere sollen hier Peaks im ITerm eliminiert werden. Die Nachfolgende Tabelle beinhaltet zwei zus\u00e4tzliche Spalten IN und OUT sie bezeichnen woher die Daten kommen ( IN ) und wer sie verwertet ( OUT ) Parameter BF IN OUT Default Bezeichnung iterm_windup MIXER ITerm iterm_windup ist eine alte Methode zur Unterdr\u00fcckung der iTerm-Akkumulation, wenn das Motordifferential einen benutzerdefinierten Schwellenwert \u00fcberschreitet. In BF 4.2 wirkt iterm_windup nur noch auf YAW iterm_relax ITERM PID_SUM iterm_relax hat iterm_windup zur Vermeidung von I-Anh\u00e4ufungen auf Mini-Quads weitgehend ersetzt. iterm_relax ist haupts\u00e4chlich zur Vermeidung von bounce-backs iterm_relax_type ITERM PID_SUM iterm_relax_cutoff ITERM PID_SUM Wenn der Pilot eine \u00c4nderung der Drehgeschwindigkeit anfordert, die f\u00fcr das Quad zu schnell ist, eilt das Gyrosignal dem Sollwert (SetPoint) hinterher und daraus entsteht ein mehr oder minder gro\u00dfes Fehlersignal. Der I-Term versucht nun diesen Fehler zu akkumulieren (aufsummieren) und versucht diese zu korrigieren. iterm_relax versucht nun diese Akkumulation zu kontrollieren. Reicht der iterm_relax nicht aus, sammeln sich die ITerm Fehler immer mehr an. Stoppt nun der Pilot seine Stickbewegung (z.B. in einem Flip), dann wird all der angesammelte ITerm-Fehler eine Gegenbewegung des Copters verursachen (BounceBack), der dann langsam ausklingen wird bis er wieder auf 0 ist. iterm_relax f\u00fcr Flip & Rolls und item_windup f\u00fcr YAW, versuchen diese Bouncebacks zu kontrollieren und abzumildern. item_relax_cutoff begrennzt die ITerm Akkumulation. iterm_rotation GYRO-Filter ITerm","title":"Tunig-Parameter"},{"location":"bf_tuning_parameters/#betaflight-bf4x-tuning-parameters","text":"","title":"Betaflight BF4.x Tuning-Parameters"},{"location":"bf_tuning_parameters/#inhaltsverzeichnis","text":"Betaflight BF4.x Tuning-Parameters Inhaltsverzeichnis Historie Tuning-Parameter Betaflight - Tuning-Tips DSHOT RPM Telemetrie-Daten Allgemeines IN OUT Parameter Gyro Filter Allgemeines IN OUT Gyro Filterarten Gyro Filter => GYRO-RPM Notch Filter Allgemeines Parameter Gyro Filter => Dynamic-Notch Filter Allgemeines Parameter Gyro Filter => Static Gyro-Notch Filter (1 und 2) Allgemeines Parameter Gyro Filter => Dynamic Gyro LowPass Filter Allgemeines Parameter Gyro Filter => Static Gyro LowPass Filter Allgemeines IN Parameter DTerm Filter Allgemeines IN OUT DTerm => Dynamic D lowpass Allgemein Parameter DTerm => Static D notch AllgemeiHz Parameter Feedforward Allgemeines IN OUT Parameter VBat Allgemeines IN OUT Parameter RC-Command Allgemeines IN OUT Parameter rc_smoothing_auto_smoothness (Default:10) Setpoint Allgemeines IN OUT Parameter ITerm Parameter Allgemeines","title":"Inhaltsverzeichnis"},{"location":"bf_tuning_parameters/#historie","text":"Version Datum Inhalt 0.1 August 2020 initial 0.2 August 2020 neu strukturiert","title":"Historie"},{"location":"bf_tuning_parameters/#tuning-parameter","text":"Nachfolgende eine Reihe der wichtigsten Tuning-Variablen. Viel mehr Details findet man hier: BF4.2-Tuning-Notes ACHTUNG Bei einem Update von BF <4.2 bitte KEIN Restore von alten Werten die durch diff all gespeichert wurden, importieren. Fangt bei NULL an","title":"Tuning-Parameter"},{"location":"bf_tuning_parameters/#betaflight-tuning-tips","text":"Weitere Tuning-Tips findest du im BF-Wiki der jeweiligen Versionen: * BF4.2-Tuning-Notes * BF4.1-Tuning-Notes * BF4.0-Tuning-Notes * BF4.0-Tuning-Notes","title":"Betaflight - Tuning-Tips"},{"location":"bf_tuning_parameters/#dshot-rpm-telemetrie-daten","text":"","title":"DSHOT RPM Telemetrie-Daten"},{"location":"bf_tuning_parameters/#allgemeines","text":"Ab BF 4.0 werden Telemetriedaten des ESCs ausgelesen und analysiert. Diese Informationen sind elementar wichtig f\u00fcr viele nachgelagerte Filtertechniken und f\u00fcr den PID-Controller. Voraussetzung ist, dass man f\u00fcr den ESC ein DSHOT-Protokoll ausgew\u00e4hlt hat","title":"Allgemeines"},{"location":"bf_tuning_parameters/#in","text":"ESC - Beachten: die aktuelle Firmware des ESCs muss RPM-Telemetrie-Daten verarbeiten k\u00f6nnen.","title":"IN"},{"location":"bf_tuning_parameters/#out","text":"RPM-Daten pro Motor","title":"OUT"},{"location":"bf_tuning_parameters/#parameter","text":"Diese Parameter k\u00f6nnen nicht direkt beeinflu\u00dft werden. Zu beachten sind welches DSHOT Protokoll verwendet wird. Bedenke: bei DSHOT300 und einer 8k PIDLoop erh\u00e4ltst du nur jede zweite PID-Loop Daten zugesendet. Daraus folgt, du solltest das passende DSHOT-Protokoll auf Deine PID-Loop ausw\u00e4hlen DSHOT150 : empfohlen bei 2k PIDLoop DSHOT300 : empfohlen bei 4k PIDLoop DSHOT600 : empfohlen bei 8k PIDLoop DSHOT1200 : 8k PIDLoop","title":"Parameter"},{"location":"bf_tuning_parameters/#gyro-filter","text":"","title":"Gyro Filter"},{"location":"bf_tuning_parameters/#allgemeines_1","text":"Der Gyro ist das zentrale Bauelement auf dem FC und stellt die aktuellen IST Flugdaten zur Verf\u00fcgung. Diese Daten werden dann bezogen auf die SOLL Daten (Die RC-Commands) verrechnet, gefiltert dem PIDController zur Verf\u00fcgung gestellt. Anschlie\u00dfend gemixt und den Motoren als neue. Jeder GYRO besitzt werkseitig einen internen LowPass-Filter. Je nach Bautyp des Gyros unterscheiden sich wie gut dieser interne Filter tats\u00e4chlich ist. Die Gyro-Filter Parameter umfassen folgende Filterarten Bei den weiteren beschriebenen Gyro Filtern wird nicht nochmals auf \u00ccN/OUT`eingegangen.","title":"Allgemeines"},{"location":"bf_tuning_parameters/#in_1","text":"gyro_scaled Daten direkt aus dem Gyro.","title":"IN"},{"location":"bf_tuning_parameters/#out_1","text":"Bereitstellung der Daten f\u00fcr nachgelagerte DTerm-Filter und als Mix-Daten f\u00fcr den P-Controller => Vorab-Fehler P-Berechnung","title":"OUT"},{"location":"bf_tuning_parameters/#gyro-filterarten","text":"Es wird unterschieden zwischen den Gyro-RPM Filtern, einem Dynamic NotchFilter und Statich Notichfilter 1+2, einem Dynamsiche LowPassfilter und einem statischen Lowpassfilter. Gyro-RPM-Notch Filter gyro_rpm_notch_harmonics=3 gyro_rpm_notch_q=500 gyro_rpm_notch_min=100 Dynamic-Notch Filter dyn_notch_min_hz dyn_notch_max_hz dyn_notch_width_percent dyn_notch_q Static Gyro-Notch Filter (1 und 2) gyro_notch1_hz gyro_notch1_cutoff gyro_notch2_hz gyro_notch2_cutoff Dynamic Gyro LowPass Filter gyro_lowpass_type gyro_lowpass_hz dyn_lpf_gyro_min_hz dyn_lpf_gyro_max_hz Static Gyro LowPass Filter gyro_lowpass2_type gyro_lowpass2_hz","title":"Gyro Filterarten"},{"location":"bf_tuning_parameters/#gyro-filter-gyro-rpm-notch-filter","text":"","title":"Gyro Filter =&gt; GYRO-RPM Notch Filter"},{"location":"bf_tuning_parameters/#allgemeines_2","text":"Der Gyro-RPM Notch Filter nutzt die vom ESC zur\u00fcckgegeben RPM-Daten und liegt als erste Filterstufe direkt hinter dem gyro_scaled Daten. BF 4.1/4.2 Bidirectional DSHOT and RPM Filter Guide","title":"Allgemeines"},{"location":"bf_tuning_parameters/#parameter_1","text":"Parameter BF Default Bezeichnung gyro_rpm_notch_harmonics 3 Schwingungen treten in wiederkehrenden Amplituden auf. Eine harmonische Schwingung kann durch eine Sinusfunktion beschrieben werden (https://de.wikipedia.org/wiki/Schwingung#Harmonische_Schwingung). Das bedeutet, dass eine Vibration sich alle xHz wiederholt! Betaflight generiert somit pro Motor 3 (Anzahl Harmonics) Notch-Filter, somit werden alle Motordaten durch 12 individuellen RPM-Notch-Filter analyisiert und schon vorgefiltert. Diesen Sachverhalt kann man in einer Blackboxauswertung sehr gut sehen (FFT-Spektrogram). gyro_rpm_notch_q 500 Der Q-Faktor des Notchfilters gibt die Breite der Kerbe (Notch=Kerbe) an. Je gr\u00f6\u00dfer die Zahl (max 1000) umso schmaler wird der Notchfilter. Der Q-Faktor wird auch als G\u00fcte-Faktur bezeichnet. Je h\u00f6her die G\u00fcte-Faktor ( Q-Faktor ) desto geringer die D\u00e4mpfung, desto schmaler der Notch-Filter. Kleine Q-Faktoren vergr\u00f6\u00dfern den RPM-Filter Delay - was unerw\u00fcnscht ist gyro_rpm_notch_min 100 Beschreibt die untere Grenzfrequenz des Notch-Filters","title":"Parameter"},{"location":"bf_tuning_parameters/#gyro-filter-dynamic-notch-filter","text":"","title":"Gyro Filter =&gt; Dynamic-Notch Filter"},{"location":"bf_tuning_parameters/#allgemeines_3","text":"Dieser Filter ist dem RPM-Filter nachgelagert und filtern nochmals bestimmte Frequenzen aus. Ohne RPM-Filter wird der Filter als Doppel-Notch Filter betrieben, dies wird \u00fcber dyn_notch_width_percent > 0 definiert. Ist dieser Wert 0, wird nur ein Notch-Filter erzeugt. Das besondere an dynamic-notch-Filter ist, dass sie dynamisch sich an der aktuellen RPM des Systems orientieren und so laufend rund um den h\u00f6chsten Frequenzbereich der Motor-Vibrationen arbeiten. Grunds\u00e4tzlich gilt, dynamische Notch-Filter haben eine geringere Latenzzeit als statische Notch-Filter. Bei einem gut abgestimmten Copter k\u00f6nnen andere Low-Pass Filter deaktiviert werden.","title":"Allgemeines"},{"location":"bf_tuning_parameters/#parameter_2","text":"Parameter BF Default Bezeichnung dyn_notch_min_hz Beschreibt die untere Grenzfrequenz dieses Notch-Filters in Hz dyn_notch_max_hz Beschreibt die obere Grenzfrequenz dieses Notch-Filters in Hz dyn_notch_width_percent Beschreibt (wenn > 0), wie weit beide Notch-Filter voneinander getrennt sind. Der Prozentsatz berechnet sich aus der Breite des Notch-Filters. dyn_notch_q Q-Faktor des Notch-Filters. (siehe hierzu Beschreibung weiter oben","title":"Parameter"},{"location":"bf_tuning_parameters/#gyro-filter-static-gyro-notch-filter-1-und-2","text":"","title":"Gyro Filter =&gt; Static Gyro-Notch Filter (1 und 2)"},{"location":"bf_tuning_parameters/#allgemeines_4","text":"Zwei statische Notch-Filter f\u00fcr ein bestimmtes Frequenzband. Dieses Frequenzband wird w\u00e4hrend des Fluges nicht mehr angepasst (statisch).","title":"Allgemeines"},{"location":"bf_tuning_parameters/#parameter_3","text":"Parameter BF Default Bezeichnung gyro_notch1_hz Center-Frequenz des Notch-Filters gyro_notch1_cutoff todo gyro_notch2_hz Center-Frequenz des Notch-Filters gyro_notch2_cutoff todo","title":"Parameter"},{"location":"bf_tuning_parameters/#gyro-filter-dynamic-gyro-lowpass-filter","text":"","title":"Gyro Filter =&gt; Dynamic Gyro LowPass Filter"},{"location":"bf_tuning_parameters/#allgemeines_5","text":"Die Auswahl den Dyn-Notchfilters Frequenzbereiches kann \u00fcber drei Auswahlm\u00f6glichkeiten voreingestellt werden * LOW : dyn_lpf_gyro_max_hz liegt bei 334hz oder ist 0 (deaktiviert) * MEDIUM : dyn_lpf_gyro_max_hz liegt bei 610hz * HIGH : dyn_lpf_gyro_max_hz liegt bei > 610hz Die durchschnittlichen Werte f\u00fcr optimale Werte f\u00fcr diese Ranges liegen * LOW : 80-330hz (f\u00fcr Copter mit niedrigen Drehzahlen oder wenn Resonanzen in niedrigen Frequenzen auftreten * MEDIUM : 140-550hz (f\u00fcr gut eingestellte 5\" Copter * HIGH : 230-800hz (f\u00fcr Copter mit hohen Drehzahlen 2,5\" - 3\") Ab BF 4.0 wird zus\u00e4tzlicher dyn_notch_min_hz Parameter zur Verf\u00fcgung gestellt. Dieser Wert f\u00e4ngt den Bereich unterhalb des Dyn-LPF ab und hat seinen Default bei 150Hz. Um 100Hz Peaks heraus zu filtern muss LOW aktiviert werden und der","title":"Allgemeines"},{"location":"bf_tuning_parameters/#parameter_4","text":"Parameter BF Default Bezeichnung dyn_notch_min_hz gyro_lowpass_type LOW/MEDIUM/HIGH (siehe Beschreibung) gyro_lowpass_hz Static Gyro LPF, sind dyn_lpf gesetzt, dann ist der Static LPF deaktiviert dyn_lpf_gyro_min_hz untere Grenzfrequenz es DynLPF dyn_lpf_gyro_max_hz obere Grenzfrequenz des DynLPF","title":"Parameter"},{"location":"bf_tuning_parameters/#gyro-filter-static-gyro-lowpass-filter","text":"","title":"Gyro Filter =&gt; Static Gyro LowPass Filter"},{"location":"bf_tuning_parameters/#allgemeines_6","text":"","title":"Allgemeines"},{"location":"bf_tuning_parameters/#in_2","text":"Throttle-Daten","title":"IN"},{"location":"bf_tuning_parameters/#parameter_5","text":"Parameter BF Default Bezeichnung gyro_lowpass2_type 4.0 PT1/BIQUAD gyro_lowpass2_hz 4.0 unter Grenzfrequenz des LPF in Hz, wenn auf 0, dann ist der LPF deaktiviert","title":"Parameter"},{"location":"bf_tuning_parameters/#dterm-filter","text":"","title":"DTerm Filter"},{"location":"bf_tuning_parameters/#allgemeines_7","text":"Der DTerm-Filter besitzt eine Reihe von Parametern die dazu genutzt werden, das DTerm-Ausgangssignal zu bearbeiten und von St\u00f6rungen (Vibrations-Frequenzen zu befreien). Wichtig: : Der DTerm des PID-Controllers verst\u00e4rkt Vibrationen, daher ist es wichtig, dass dieses Signal m\u00f6glichst frei von St\u00f6rungs- / Vibrationssignalen ist. D verst\u00e4rkt h\u00f6here Frequenzen, der D-Anteil wird aber dringend ben\u00f6igt um Vibrationen zwischen 30-80hz (Z.B. Propwash) auszugleichen. Das bedeutet wir ben\u00f6tigen soviel wie m\u00f6glich D-Anteil bis 100hz und so wenig wie m\u00f6glich \u00fcber 100hz. DTerm-Filter sollten immer in der ersten Stufe als BIQUAD und in der zweiten Stufe als PT eingestellt werden. DTerm Filter Daten sind zeitabh\u00e4ngig ( d/dt ) Folgende DTerm-Filter werden genutzt: * Dynamic D lowpass ``` dterm_lowpass_type dyn_lpf_dterm_min_hz dyn_lpf_dterm_max_hz dyn_lpf_dterm_curve_expo ``` Static D lowpass dterm_lowpass2_type dterm_lowpass2_hz Static D notch dterm_notch_hz dterm_notch_cutoff","title":"Allgemeines"},{"location":"bf_tuning_parameters/#in_3","text":"Daten kommen aus den Gyro Filter Berechnungen","title":"IN"},{"location":"bf_tuning_parameters/#out_2","text":"Daten gehen direkt an den D-Controller","title":"OUT"},{"location":"bf_tuning_parameters/#dterm-dynamic-d-lowpass","text":"","title":"DTerm =&gt; Dynamic D lowpass"},{"location":"bf_tuning_parameters/#allgemein","text":"Dynamischer Lowpass filter f\u00fcr den DTerm","title":"Allgemein"},{"location":"bf_tuning_parameters/#parameter_6","text":"Parameter BF Default Bezeichnung dterm_lowpass_type 4.0 PT1 / BIQUAD, sollte auf BIQUAD f\u00fcr LPF 1 stehen, LPF2 = PT1 dyn_lpf_dterm_min_hz 4.0 LowPass min Hz dterm_lowpass2_hz 4.0 LowPass2 min Hz","title":"Parameter"},{"location":"bf_tuning_parameters/#dterm-static-d-notch","text":"","title":"DTerm =&gt; Static D notch"},{"location":"bf_tuning_parameters/#allgemeihz","text":"","title":"AllgemeiHz"},{"location":"bf_tuning_parameters/#parameter_7","text":"Parameter BF Default Bezeichnung dterm_notch_hz dterm_notch_cutoff","title":"Parameter"},{"location":"bf_tuning_parameters/#feedforward","text":"","title":"Feedforward"},{"location":"bf_tuning_parameters/#allgemeines_8","text":"Feedforward ist dem PID-Controller nachgelagert und unabh\u00e4ngig vom PID. FF verst\u00e4rkt bzw. wirkt auf Deine Stickbewegung und hilft den Motoren schneller zu reagieren. Mehr Infos zu Feedforward Feedforward BF 4.1 Feedforward 2.0 BF 4.2","title":"Allgemeines"},{"location":"bf_tuning_parameters/#in_4","text":"","title":"IN"},{"location":"bf_tuning_parameters/#out_3","text":"","title":"OUT"},{"location":"bf_tuning_parameters/#parameter_8","text":"Parameter BF Default Bezeichnung ff_boost 4.1 15 Der Booster verst\u00e4rkt den gesamten FF-Wert aber zu einem sehr fr\u00fchen Zeitpunkt und veringert damit ein Delay ff_interpolate_sp 4.1 2 (Average_2) siehe Anhang der Tabelle ff_spike_limit 4.1 50 Es wird eine effiziente verz\u00f6gerungsfreie D\u00e4mpfungsmethode verwendet, die Erh\u00f6hung des boosts durch Spikes verringert bzw. vermeidet. Liegt der normale Boost-Wert unter dem limit wird er durchgelassen, alles weitere, hohe Boosts die durch Spikes verursacht werden, werden ged\u00e4mpft. ff_max_rate_limit 4.1 100 ff_max_rate_limit unterbricht den Feedforward, wenn die Geschwindigkeit mit dem der Stick bewegt wird wahrscheinlich sein Ende des mechanischen Verfahrensweges erreicht. Dadurch wird ein \u00dcberschwingen gerade bei Beginn von Flips reduziert. ff_smooth_factor 4.2 37 Gl\u00e4ttungsfaktor f\u00fcr einkommende Signale. Funktioniert wie ein LowPassfilter. 0 = keine Gl\u00e4ttung, h\u00f6here Werte wie der Defaultwert, erh\u00f6hen auch die Latzenzeit und wirkt dem eigentlich FF-Forward entgegen ff_interpolate_sp Auspr\u00e4gung * OFF * ON * AVERAGE-2 : passt f\u00fcr die meisten Copter & Freestyler * AVERAGE-3 : * AVERAGE-4 :","title":"Parameter"},{"location":"bf_tuning_parameters/#vbat","text":"","title":"VBat"},{"location":"bf_tuning_parameters/#allgemeines_9","text":"Ab BF 4.2 wir mit VBAT-SAG-Kompensation Weitere Informationen:","title":"Allgemeines"},{"location":"bf_tuning_parameters/#in_5","text":"","title":"IN"},{"location":"bf_tuning_parameters/#out_4","text":"","title":"OUT"},{"location":"bf_tuning_parameters/#parameter_9","text":"Parameter BF Default Bezeichnung vbat_sag_compensation 4.2 100 100% Kompensation der Batterieentladung vbat_pid_gain ? OFF alte Version sollte immer OFF sein","title":"Parameter"},{"location":"bf_tuning_parameters/#rc-command","text":"","title":"RC-Command"},{"location":"bf_tuning_parameters/#allgemeines_10","text":"","title":"Allgemeines"},{"location":"bf_tuning_parameters/#in_6","text":"Receiver-Daten Signal","title":"IN"},{"location":"bf_tuning_parameters/#out_5","text":"Daten werden mit den eingstellten Rates verrechnet und gelten dann als das angewendete RCCommand-Eingangs-Signal","title":"OUT"},{"location":"bf_tuning_parameters/#parameter_10","text":"Parameter BF Default Bezeichnung rc_interpolation rc_interp rc_inter_ch rc_inter_int","title":"Parameter"},{"location":"bf_tuning_parameters/#rc_smoothing_auto_smoothness-default10","text":"rc-smoothing-auto-smoothness setzt wie glatt der die RC-Signale sein sollen. Gr\u00f6\u00dfere Werte erh\u00f6hen die Gl\u00e4ttung vergr\u00f6\u00dfern aber das RC-Delay. 10 ist optimal f\u00fcr die meisten allgemeinen Fl\u00fcge. Racer bevorzugen 8 oder sogar 5. Das RC-Delay nimmt zwar ab, daf\u00fcr k\u00f6nnen die Motor-Signale etwas unruhiger werden.","title":"rc_smoothing_auto_smoothness (Default:10)"},{"location":"bf_tuning_parameters/#setpoint","text":"","title":"Setpoint"},{"location":"bf_tuning_parameters/#allgemeines_11","text":"In der weiteren Berarbietung der Eingangssignale werden diese als Setpoint bezeichnet und spiegeln das RC-Signal wieder allerdings durch eine Reihe von Parametern gegl\u00e4ttet","title":"Allgemeines"},{"location":"bf_tuning_parameters/#in_7","text":"Aufbereitetes RC-Command Signal","title":"IN"},{"location":"bf_tuning_parameters/#out_6","text":"Daten die mittels setpoint_smoothing nochmals gegl\u00e4ttet werden werden an * Vorab-Fehler P-Berechnung * d/dt","title":"OUT"},{"location":"bf_tuning_parameters/#parameter_11","text":"Setpoint/Setpoint smoothing beinhaltet eine Reihe von Parametern die das eigentlich Signal nochmals aufbereiten. Parameter BF Default Bezeichnung rc_smoothing_type rc_smoothing_auto_smoothness 10 setzt wie glatt der die RC-Signale sein sollen. Gr\u00f6\u00dfere Werte erh\u00f6hen die Gl\u00e4ttung vergr\u00f6\u00dfern aber das RC-Delay. 10 ist optimal f\u00fcr die meisten allgemeinen Fl\u00fcge. Racer bevorzugen 8 oder sogar 5. Das RC-Delay nimmt zwar ab, daf\u00fcr k\u00f6nnen die Motor-Signale etwas unruhiger werden rc_smoothing_input_Hz rc_smoothing_input_type","title":"Parameter"},{"location":"bf_tuning_parameters/#iterm-parameter","text":"","title":"ITerm Parameter"},{"location":"bf_tuning_parameters/#allgemeines_12","text":"ITerm Parameter dienen dazu das I-Signal die PID-Controllers entweder vor der Bearbeitung von ITerm oder nach ITerm zu beeinflu\u00dfen. Insbesondere sollen hier Peaks im ITerm eliminiert werden. Die Nachfolgende Tabelle beinhaltet zwei zus\u00e4tzliche Spalten IN und OUT sie bezeichnen woher die Daten kommen ( IN ) und wer sie verwertet ( OUT ) Parameter BF IN OUT Default Bezeichnung iterm_windup MIXER ITerm iterm_windup ist eine alte Methode zur Unterdr\u00fcckung der iTerm-Akkumulation, wenn das Motordifferential einen benutzerdefinierten Schwellenwert \u00fcberschreitet. In BF 4.2 wirkt iterm_windup nur noch auf YAW iterm_relax ITERM PID_SUM iterm_relax hat iterm_windup zur Vermeidung von I-Anh\u00e4ufungen auf Mini-Quads weitgehend ersetzt. iterm_relax ist haupts\u00e4chlich zur Vermeidung von bounce-backs iterm_relax_type ITERM PID_SUM iterm_relax_cutoff ITERM PID_SUM Wenn der Pilot eine \u00c4nderung der Drehgeschwindigkeit anfordert, die f\u00fcr das Quad zu schnell ist, eilt das Gyrosignal dem Sollwert (SetPoint) hinterher und daraus entsteht ein mehr oder minder gro\u00dfes Fehlersignal. Der I-Term versucht nun diesen Fehler zu akkumulieren (aufsummieren) und versucht diese zu korrigieren. iterm_relax versucht nun diese Akkumulation zu kontrollieren. Reicht der iterm_relax nicht aus, sammeln sich die ITerm Fehler immer mehr an. Stoppt nun der Pilot seine Stickbewegung (z.B. in einem Flip), dann wird all der angesammelte ITerm-Fehler eine Gegenbewegung des Copters verursachen (BounceBack), der dann langsam ausklingen wird bis er wieder auf 0 ist. iterm_relax f\u00fcr Flip & Rolls und item_windup f\u00fcr YAW, versuchen diese Bouncebacks zu kontrollieren und abzumildern. item_relax_cutoff begrennzt die ITerm Akkumulation. iterm_rotation GYRO-Filter ITerm","title":"Allgemeines"}]}